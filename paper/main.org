#+title: Congestion-Free Network Updates: Algorithms and Complexity

#+startup: latexpreview

#+latex_class: book
#+latex_class_options: [fontsize=11pt,paper=a4]

#+latex_header: \input{preamble}

#+caption: Table of notations
| [[notation:reachability-relation][\(\leq_G\)]]           | The reachability relation for directed graph \(G\)                                        |
| [[notation:block-update][\(b(v,P)\)]]           | The \(P\)-block containing vertex \(v\)                                                   |
| [[notation:flow-pair-block][\(P(b)\)]]             | The flow pair \(P\) such that block \(b\) is a \(P\)-block                                |
| [[notation:start-block][\(\mathcal{S}(b)\)]]   | The least vertex in block \(b\) w.r.t. reachability relation \(\leq_{P(b)^o\cup P(b)^u}\) |
| [[notation:p-blocks][\(B^P(G)\)]]           | The set of \(P\)-blocks                                                                   |
| [[notation:blocks][\(B(G)\)]]             | The set of blocks                                                                         |
| [[notation:block-sequence-round-block][\(\mathcal{B}(b)\)]]   | The round in which block \(b\) is updated                                                 |
| [[notation:block-sequence-round-update][\(\mathcal{B}(v,P)\)]] | The round in which block \(b(v,P)\) is updated                                            |
| [[notation:b-sub-i][\(B_i\)]]              | The set of blocks updated before or in the \(i\)-th round                                 |
|                      |                                                                                           |

* Preliminaries

#+name: notation:reachability-relation
#+begin_notation
For a directed graph \(G\), \(\leq_G=E(G)^*\) denotes the reachability relation of \(G\).
That is, for every two vertices \(u,v\in V(G)\), \(u\leq_Gv\) iff there is a path in \(G\) from \(u\) to \(v\).
#+end_notation

Notice that for every directed graph \(G\),

1. reachability relation \(\leq_G\) is a partial order,

2. if \(G\) is a DAG, then \(\leq_G\) is antisymmetric, and

3. if \(G\) is a path graph, then \(\leq_G\) is a total order.

#+name: defn:block
#+begin_defn
Let \(G=(V,E,\mathcal{P},s,t,c)\) be an update flow network and \(P\in\mathcal{P}\) be a flow pair.
Let \(v_1,\dots,v_{\ell}\) be the set \(V(P^o\cap P^u)\) ordered w.r.t. \(\leq_{P^o\cup P^u}\).
For every \(i\in[\ell-1]\), we define the \(i\)-th /\(P\)-block/ as \(b_i^P=\{v\mid v_i\leq_{P^o\cup P^u}v\leq_{P^o\cup P^u}v_{i+1}\}\).
#+end_defn

#+begin_remark
There are multiple issues with this definition (see [[file:../README.org::*Open problems]]).
#+end_remark

#+name: notation:block-update
#+begin_notation
For a flow pair \(P\) and a vertex \(v\in V(P)\), \(b(v,P)\) denotes the \(P\)-block containing \(v\).
#+end_notation

#+name: notation:start-block
#+begin_notation
For a block \(b\), \(P(b)\) denotes the flow pair \(P\) such that \(b\) is a \(P\)-block.
#+end_notation

#+name: notation:flow-pair-block
#+begin_notation
For a block \(b\), \(\mathcal{S}(b)\) denotes the /start/ of \(b\), that is, the least vertex in \(b\) w.r.t. \(\leq_{P(b)^o\cup P(b)^u}\).
#+end_notation

#+name: notation:p-blocks
#+begin_notation
For an update flow network \(G\) and a flow pair \(P\), \(B^P(G)\) denotes the set of \(P\)-blocks.
#+end_notation

#+name: notation:blocks
#+begin_notation
For an update flow network \(G\), \(B(G)=\bigcup_{P\in\mathcal{P}}B^P(G)\) denotes the set of blocks.
#+end_notation

#+name: defn:block-sequence
#+begin_defn
A /block sequence/ \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) is an ordered partition of the set of blocks.
#+end_defn

#+name: remark:block-sequence
#+begin_remark
We may ignore all blocks containing less than three vertices.
#+end_remark

- [ ] Flesh out and argue why.

#+name: notation:block-sequence-round-block
#+begin_notation
For a block sequence \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) and a block \(b\), \(\mathcal{B}(b)\) denotes the index \(i\in[\ell]\) such that \(b\) is contained in \(\mathscr{B}_i\).
#+end_notation

#+name: notation:block-sequence-round-update
#+begin_notation
For a block sequence \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\), a flow pair \(P\), and a vertex \(v\in V(P)\), \(\mathcal{B}(v,P)=\mathcal{B}(b(v,P))\) denotes the index \(i\in[\ell]\) such that block \(b(v,P)\) is contained in \(\mathscr{B}_i\).
#+end_notation

#+name: notation:b-sub-i
#+begin_notation
For a block sequence \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) and an index \(i\in[\ell]\), \(B_i=\bigcup_{j\leq i}\mathscr{B}_j\) denotes the set of blocks updated before or in the \(i\)-th round.
#+end_notation

#+name: defn:alpha-block
#+begin_defn
Let \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) be a block sequence.
For a flow pair \(P\), an edge \((u,v)\in E(P^o\cup P^u)\), and an index \(i\in[\ell]\), the /activation label/ \(\alpha_P((u,v),B_i)\) is defined as follows:
\[\alpha_P((u,v),B_i)=
\begin{cases}
\mathrm{active} & \text{if }(u,v)\in E(P^o)\text{ and }b(u,P)\notin B_i\\
\mathrm{active} & \text{if }(u,v)\in E(P^u)\text{ and }b(u,P)\in B_i\\
\mathrm{inactive} & \text{otherwise}.
\end{cases}\]
#+end_defn

#+name: lem:alpha-block-cases-edge
#+begin_lem
Let \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) be a block sequence, \(P\) be a flow pair, \((u,v)\in E(P^o\cup P^u)\), and \(i\in[\ell]\).
Then:

1. If \((u,v)\in E(P^o\setminus P^u)\), then
   \[\alpha_P((u,v),B_i)=
   \begin{cases}
   \mathrm{active} & i<\mathcal{B}(u,P)\\
   \mathrm{inactive} & i\geq\mathcal{B}(u,P).
   \end{cases}\]
   
2. If \((u,v)\in E(P^o\cap P^u)\), then \(\alpha_P((u,v)B_i)=\mathrm{active}\).

3. If \((u,v)\in E(P^u\setminus P^o)\), then
   \[\alpha_P((u,v),B_i)=
   \begin{cases}
   \mathrm{active} & i\geq\mathcal{B}(u,P)\\
   \mathrm{inactive} & i<\mathcal{B}(u,P).
   \end{cases}\]
#+end_lem

#+name:
#+begin_notation
For a flow pair \(P\) and a \(P\)-block \(b\), \(U(b)=\{(v,P)\mid v\in b\}\) denotes the set of updates induced by \(b\).
Moreover, for a set \(B\) of blocks, \(U(B)=\bigcup_{b\in B}U(b)\) denotes the set of updates induced by \(B\).
#+end_notation

The following lemma shows that for every block sequence \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\), every flow pair \(P\), every edge \(e\in E(P^o\cup P^u)\), and every \(i\in[\ell]\), \(\alpha_P(e,B_i)=\mathrm{active}\) iff \(e\) is on the transient (\(s,t\))-path for \(P\) after updating all blocks in \(B_i\).

#+name: lem:alpha-block-eq-active-iff
#+begin_lem
Let \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) be a block sequence, \(P\) be a flow pair, \(e\in E(P^o\cup P^u)\), and \(i\in[\ell]\).
Then \(\alpha_P(e,B_i)=\mathrm{active}\) iff \(e\in E(T_{P,U(B_i)})\).
#+end_lem

#+name: defn:feasible-block-sequence
#+begin_defn
A block sequence \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) is /feasible/ if for every edge \(e\) and every index \(i\in[\ell]\),
#+name: eqn:capacity-constraint-blocks
\begin{equation}
c(e)\geq\sum_{P\in\mathcal{P}:\alpha_P(e,B_{i-1})=\mathrm{active}\text{ or }\alpha_P(e,B_i)=\mathrm{active}}d_P,
\end{equation}
where we define \(\mathscr{B}_0\) to be the empty set.
#+end_defn

#+name: remark:capacity-constraint-blocks-demand-1
#+begin_remark
Let \(G\) be an update flow network with unit demand, that is, \(d_P=1\) for every flow pair \(P\), and let \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) be a block sequence.
Then, for every edge \(e\) and every index \(i\in[\ell]\), capacity constraint [[eqn:capacity-constraint-blocks]] simplifies to:
\begin{align*}
c(e)
&\geq\sum_{P\in\mathcal{P}:\alpha_P(e,B_{i-1})=\mathrm{active}\text{ or }\alpha_P(e,B_i)=\mathrm{active}}d_P\\
&=\sum_{P\in\mathcal{P}:\alpha_P(e,B_{i-1})=\mathrm{active}\text{ or }\alpha_P(e,B_i)=\mathrm{active}}1\\
&=\lvert\{P\in\mathcal{P}\mid\alpha_P(e,B_{i-1})=\mathrm{active}\text{ or }\alpha_P(e,B_i)=\mathrm{active}\}\rvert.
\end{align*}
#+end_remark

#+name: lem:update-flow-network-feasible-if
#+begin_lem
Let \(G\) be a not necessarily feasible update flow network and \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) be a block sequence. Then:

1. @@latex:\label{itm:lem-update-flow-network-feasible-if-1}@@
   The old flow network is feasible if capacity constraint [[eqn:capacity-constraint-blocks]] is satisfied for every edge and \(i=1\).

2. @@latex:\label{itm:lem-update-flow-network-feasible-if-2}@@
   The updated flow network is feasible if capacity constraint [[eqn:capacity-constraint-blocks]] is satisfied for every edge and \(i=\ell\).
#+end_lem

#+begin_proof
Let \(G\) be a not necessarily feasible update flow network and \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) be a block sequence.
Moreover, let \(e\) be an edge.

#+latex: \paragraph{\ref{itm:lem-update-flow-network-feasible-if-1}.}
Suppose capacity constraint [[eqn:capacity-constraint-blocks]]  is satisfied for \(e\) and \(i=1\).
Then, since \(\mathscr{B}_0=\emptyset\), and by definitions of \(B_i\) and \(\alpha_P\):
\begin{align*}
c(e)
&\geq\sum_{P\in\mathcal{P}:\alpha_P(e,B_0)=\mathrm{active}\text{ or }\alpha_P(e,B_1)=\mathrm{active}}d_P\\
&\geq\sum_{P\in\mathcal{P}:\alpha_P(e,B_0)=\mathrm{active}}d_P\\
&=\sum_{P\in\mathcal{P}:e\in E(P^o)}d_P.
\end{align*}
#+latex: \paragraph{\ref{itm:lem-update-flow-network-feasible-if-2}.}
Suppose capacity constraint [[eqn:capacity-constraint-blocks]]  is satisfied for \(e\) and \(i=\ell\).
Then, since \(\mathcal{B}\) partitions the set of blocks, and by definitions of \(B_i\) and \(\alpha_P\):
\begin{align*}
c(e)
&\geq\sum_{P\in\mathcal{P}:\alpha_P(e,B_{\ell-1})=\mathrm{active}\text{ or }\alpha_P(e,B_{\ell})=\mathrm{active}}d_P\\
&\geq\sum_{P\in\mathcal{P}:\alpha_P(e,B_{\ell})=\mathrm{active}}d_P\\
&=\sum_{P\in\mathcal{P}:e\in E(P^u)}d_P.
\end{align*}
#+end_proof

#+name: corollary:block-sequence-iff-update-sequence
#+begin_corollary
There is a feasible block sequence iff there is a feasible update sequence.
#+end_corollary

* \(\textbf{NP}\)-Hardness for \(k=3\)

The goal of this section is to prove the following theorem.

#+name: thm:np-hardness-k-eq-3
#+begin_thm
The \(k\)-network flow update problem is \(\textbf{NP}\)-hard for \(k=3\).
#+end_thm

We will prove this theorem in two steps.
First, we will prove the following theorem.

#+name: thm:np-hardness-special-case
#+begin_thm
The \(k\)-network flow update problem, where every edge is used by at most three flow pairs, is \(\textbf{NP}\)-hard for \(k=10\).
#+end_thm

Then, we will (repeatedly) apply the following lemma to the flow update network we will have constructed in the proof of Theorem [[thm:np-hardness-special-case]] to reduce the number of flow pairs from \(10\) to \(3\).

#+name: lem:merging-flow-pairs
#+attr_latex: :options [Merging Lemma]
#+begin_lem
Let \(G\) be an update flow network with \(k\geq 2\) flow pairs, and let \(F,F'\) be two flow pairs such that

1. @@latex:\label{itm:lem-merging-flow-pairs-property-1}@@
   \(d_F=d_{F'}\),

2. @@latex:\label{itm:lem-merging-flow-pairs-property-2}@@
   \(F\) and \(F'\) have no common vertices other than \(s,t\), that is, \(V(F^o\cup F^u)\cap V(F'^o\cup F'^u)=\{s,t\}\), and

3. @@latex:\label{itm:lem-merging-flow-pairs-property-3}@@
   there are vertices \(v_F,v_{F'}\) such that

   1) @@latex:\label{itm:lem-merging-flow-pairs-property-3-1}@@
      there is no edge from \(v_F\) to \(v_{F'}\), that is, \((v_F,v_{F'})\notin E\),

   2) @@latex:\label{itm:lem-merging-flow-pairs-property-3-2}@@
      \((v_F,t)\) (\((s,v_{F'})\)) is the last (first) edge on both \(F^o\) and \(F^u\) (\(F'^o\) and \(F'^u\)), that is, \((v_F,t)\in E(F^o\cap F^u)\) (\((s,v_{F'})\in E(F'^o\cap F'^u)\)), and

   3) @@latex:\label{itm:lem-merging-flow-pairs-property-3-3}@@
      the capacity constraint for \((v_F,t)\) (\((s,v_{F'})\)) is trivially satisfied, that is,
      \[
      c(e)\geq\sum_{P\in\mathcal{P}:e\in E(P^o\cup P^u)}d_P
      \]
      for \(e=(v_F,t)\) (\(e=(s,v_{F'})\)).


Then there is an update flow network \(\tilde{G}\) with \(k-1\) flow pairs such that (\(\lvert\tilde{G}\rvert=O(\lvert G\rvert)\) and) there is a feasible block sequence \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) for \(G\) iff there is a feasible block sequence \(\tilde{\mathcal{B}}=(\tilde{\mathscr{B}}_1,\dots,\tilde{\mathscr{B}}_{\ell})\) for \(\tilde{G}\).
#+end_lem

#+begin_remark
I'm confident we don't need property \ref{itm:lem-merging-flow-pairs-property-3}, but it significantly simplifies the proof.
#+end_remark

** \(\textbf{NP}\)-Hardness for the Special Case

The proof of Theorem [[thm:np-hardness-special-case]] is via reduction from \(\textsf{4-SAT}\) and is based on the \(\textbf{NP}\)-hardness proof for \(k=6\) in [cite:@amiri2019polynomialtime].

Let \(C\) be a 4CNF formula with \(n\) variables \(x_1,\dots,x_n\) and \(m\) clauses \(C_1,\dots,C_m\).
W.l.o.g. every variable occurs both positively and negatively (otherwise, if a variable \(x_j\) occurs only positively (negatively), we can assign \(1\) (\(0\)) to \(x_j\) and remove all clauses containing literal \(x_j\) (\(\bar{x}_j\))).
We construct the corresponding update flow network \(G\) as follows.

*** The Reduction

First, we introduce a /clause gadget/ for each clause and a /variable gadget/ for each variable.
Then, we connect the variable and clause gadgets.
Finally, we take the remaining steps necessary to ensure that \(G\) is indeed a feasible update flow network.

#+latex: \paragraph{Clause gadgets.}
Let \(C_i=(l_{i_1}\vee l_{i_2}\vee l_{i_3}\vee l_{i_4})\) be a clause.
We construct the corresponding clause gadget \(C^i\) as follows.
The idea is to model the syntax tree for \(C_i\) depicted in Figure [[fig:syntax-tree]].

#+caption: A syntax tree for clause \((l_{i_1}\vee l_{i_2}\vee l_{i_3}\vee l_{i_4})\)
#+name: fig:syntax-tree
[[file:../assets/Screen Shot 2023-02-14 at 15.05.37.png]]

For the root operator node, we introduce a /clause vertex/ \(u^i\) which is used by three flow pairs \(L,R,B\).
The idea is to guarantee that clause \(C_i\) is satisfied iff block \(b(u^i,L)\) is updated before block \(b(u^i,B)\) or block \(b(u^i,R)\) is updated before \(b(u^i,B)\).
Equivalently, \(b(u^i,B)\) cannot be updated unless at least one of \(b(u^i,L),b(u^i,R)\) has been updated.
Intuitively, if \(b(u^i,L)\) (\(b(u^i,R)\)) is updated before \(b(u^i,B)\), then the \(\textbf{L}\)eft half \((l_{i_1}\vee l_{i_2})\) (\(\textbf{R}\)ight half \((l_{i_3}\vee l_{i_4})\)) of \(C_i\) is satisfied.

Similarly, for the intermediate operator nodes of the syntax tree, we introduce clause vertices \(u_{1,2}^i,u_{3,4}^i\), where \(u_{1,2}^i\) corresponds to \((l_{i_1}\vee l_{i_2})\) and \(u_{3,4}^i\) corresponds to \((l_{i_3}\vee l_{i_4})\).
Both clause vertices are used by flow pairs \(\tilde{L},\tilde{R},\tilde{B}\) such that if \(b(u_{1,2}^i,\tilde{L})\) (\(b(u_{1,2}^i,\tilde{R})\)) is updated before \(b(u_{1,2},\tilde{B})\), then the left half \(l_{i_1}\) (right half \(l_{i_2}\)) of \((l_{i_1}\vee l_{i_2})\) is satisfied, and analogously for \(u_{3,4}^i\).

Moreover, for the operand nodes of the syntax tree, we introduce /literal vertices/ \(u_1^i,u_2^i,u_3^i,u_4^i\).

Finally, for every branch from a parent node to its left (right) child node, we add an edge to either \(L\) (\(R\)) (if the parent node is \(u^i\)) or \(\tilde{L}\) (\(\tilde{R}\)) (if the parent node is \(u_{1,2}^i\) or \(u_{3,4}^i\)).

We now proceed with the detailed specification of clause gadget \(C^i\) (see Figure [[fig:clause-gadget]]).

#+caption: Clause gadget \(C^i\)
#+name: fig:clause-gadget
[[file:../assets/Screen Shot 2023-02-14 at 15.07.03.png]]

We introduce six flow pairs \(L,R,B,\tilde{L},\tilde{R},\tilde{B}\), each with demand \(1\).

For the clause vertices, we introduce two vertices \(u^i,v^i\) and add edge \((u^i,v^i)\) to flows \(L^o,R^o,B^u\).
Similarly, we introduce vertices \(u_{1,2}^i,v_{1,2}^i,u_{3,4}^i,v_{3,4}^i\) and add edges \((u_{1,2}^i,v_{1,2}^i),(u_{3,4}^i,v_{3,4}^i)\) to flows \(\tilde{L}^o,\tilde{R}^o,\tilde{B}^u\).

For the literal vertices, we introduce vertices \(u_1^i,v_1^i,u_2^i,v_2^i,u_3^i,v_3^i,u_4^i,v_4^i\) and add edges \((u_1^i,v_1^i),(u_3^i,v_3^i)\) to flow \(\tilde{L}^u\) and \((u_2^i,v_2^i),(u_4^i,v_4^i)\) to \(\tilde{R}^u\).

Moreover, we introduce auxiliary vertices \(\tilde{u}_{1,2}^i,\tilde{v}_{1,2}^i,\tilde{u}_{3,4}^i,\tilde{v}_{3,4}^i\) and add edge \((\tilde{u}_{1,2}^i,\tilde{v}_{1,2}^i)\) to flows \(\tilde{L}^u,\tilde{B}^o\) and \((\tilde{u}_{3,4}^i,\tilde{v}_{3,4}^i)\) to \(\tilde{R}^u,\tilde{B}^o\).

Finally, we add the following edges to connect clause gadget \(C^i\):

- \((u^i,\tilde{u}_{1,2}^i),(\tilde{v}_{1,2}^i,v^i)\) to \(L^u\)
- \((u^i,\tilde{u}_{3,4}^i),(\tilde{v}_{3,4}^i,v^i)\) to \(R^u\)
- \((v_{1,2}^i,u_{3,4}^i)\) to \(\tilde{L}^o,\tilde{L}^u,\tilde{R}^o,\tilde{R}^u\)
- \((u_{1,2}^i,u_1^i),(v_1^i,v_{1,2}^i),(u_{3,4}^i,u_3^i),(v_3^i,v_{3,4}^i)\) to \(\tilde{L}^u\)
- \((u_{1,2}^i,u_2^i),(v_2^i,v_{1,2}^i),(u_{3,4}^i,u_4^i),(v_4^i,v_{3,4}^i)\) to \(\tilde{R}^u\)
- \((\tilde{v}_{1,2}^i,\tilde{u}_{3,4}^i)\) to \(\tilde{B}^o,\tilde{B}^u\)
- \((\tilde{u}_{1,2}^i,u_{1,2}^i),(v_{1,2}^i,\tilde{v}_{1,2}^i),(\tilde{u}_{3,4}^i,u_{3,4}^i),(v_{3,4}^i,\tilde{v}_{3,4}^i)\) to \(\tilde{B}^u\)

#+latex: \paragraph{Variable gadgets.}
For every variable \(x_j\), we construct the corresponding variable gadget \(X^j\) as follows.
We introduce a /variable vertex/ \(x^j\) which is used by three flow pairs \(X,\bar{X},B\).
The idea is to guarantee the following:

1. If block \(b(x^j,X)\) is updated before block \(b(x^j,B)\), then variable \(x_j\) is assigned \(1\).
2. If block \(b(x^j,\bar{X})\) is updated before \(b(x^j,B)\), then \(x_j\) is assigned \(0\).
3. Not both \(b(x^j,X)\) and \(b(x^j,\bar{X})\) can be updated before \(b(x^j,B)\).

We now proceed with the detailed specification of variable gadget \(X^j\) (see Figure [[fig:variable-gadget]]).

#+caption: Variable gadget \(X^j\)
#+name: fig:variable-gadget
[[file:../assets/Screen Shot 2023-02-14 at 15.06.35.png]]

We introduce two flow pairs \(X,\bar{X}\), each with demand \(1\).
For the variable vertices, we introduce vertices \(x^j,y^j\) and add edge \((x^j,y^j)\) to flows \(X^u,\bar{X}^u,B^o\).
Moreover, we introduce auxiliary vertices \(x_0^j,y_0^j,x_1^j,y_1^j\) and add edge \((x_0^j,y_0^j)\) to flow \(\bar{X}^o\) and \((x_1^j,y_1^j)\) to \(X^o\).
Finally, to connect variable gadget \(X^j\), we add edges \((x^j,x_0^j),(y_0^j,y^j)\) to flow \(\bar{X}^o\) and \((x^j,x_1^j),(y_1^j,y^j)\) to \(X^o\).

#+latex: \paragraph{Connecting variable with clause gadgets.}
For every \(j\in[n]\) and every \(i\in[m]\), we connect variable gadget \(X^j\) to clause gadget \(C^i\) if variable \(x_j\) occurs in clause \(C_i\).
More precisely, we introduce two flow pairs \(B_0,B_1\), each with demand \(1\), such that \(B_0\) (\(B_1\)) connects vertex \(x_0^j\) (\(x_1^j\)) to all literal vertices corresponding to literal \(\bar{x}_j\) (\(x_j\)).

More formally, for every \(j\in[n]\), let \(P_j=\{p_1^j,\dots,p_{\ell_j}^j\}\) denote the set of indices of the clauses containing literal \(x_j\) and \(\bar{P}_j=\{\bar{p}_1^j,\dots,p_{\ell'_j}^j\}\) denote the set of indices of the clauses containing literal \(\bar{x}_j\).
Moreover, for every \(j\in[n]\) and every \(i\in[m]\), let \(\pi(i,j)\) denote the position of literal \(x_j\) in clause \(C_i\) and \(\bar{\pi}(i,j)\) denote the position of literal \(\bar{x}_j\) in \(C_i\).
For every \(j\in[n]\), we add the following edges:

- \((x_0^j,u_{\bar{\pi}(\bar{p}_1^j,j)}^{\bar{p}_1^j})\), \((u_{\bar{\pi}(\bar{p}_{\ell}^j,j)}^{\bar{p}_{\ell}^j},v_{\bar{\pi}(\bar{p}_{\ell}^j,j)}^{\bar{p}_{\ell}^j})\) for every \(\ell\in[\ell'_j]\), \((v_{\bar{\pi}(\bar{p}_{\ell}^j,j)}^{\bar{p}_{\ell}^j},u_{\bar{\pi}(\bar{p}_{\ell+1}^j,j)}^{\bar{p}_{\ell+1}^j})\) for every \(\ell\in[\ell'_j-1]\), and \((v_{\bar{\pi}(\bar{p}_{\ell'_j}^j,j)}^{\bar{p}_{\ell'_j}^j},y_0^j)\) to \(B_0^o\)
- \((x_1^j,u_{\pi(p_1^j,j)}^{p_1^j})\), \((u_{\pi(p_{\ell}^j,j)}^{p_{\ell}^j},v_{\pi(p_{\ell}^j,j)}^{p_{\ell}^j})\) for every \(\ell\in[\ell_j]\), \((v_{\pi(p_{\ell}^j,j)}^{p_{\ell}^j},u_{\pi(p_{\ell+1}^j,j)}^{p_{\ell+1}^j})\) for every \(\ell\in[\ell_j-1]\), and \((v_{\pi(p_{\ell_j}^j,j)}^{p_{\ell_j}^j},y_1^j)\) to \(B_1^o\)

#+latex: \paragraph{Completing the update flow network.}
We introduce vertices \(s,t\) and create (\(s,t\))-paths for all flows by adding the following edges:

- \((s,u^1),(v^m,t)\) to \(L^o,L^u,R^o,R^u\)
- \((v^i,u^{i+1})\) for every \(i\in[m-1]\) to \(L^o,L^u,R^o,R^u,B^u\)
- \((s,u_{1,2}^1)\), \((v_{3,4}^i,u_{1,2}^{i+1})\) for every \(i\in[m-1]\), and \((v_{3,4}^m,t)\) to \(\tilde{L}^o,\tilde{L}^u,\tilde{R}^o,\tilde{R}^u\)
- \((s,\tilde{u}_{1,2}^1)\), \((\tilde{v}_{3,4}^i,\tilde{u}_{1,2}^{i+1})\) for every \(i\in[m-1]\), and \((\tilde{v}_{3,4}^m,t)\) to \(\tilde{B}^o,\tilde{B}^u\)
- \((s,x^1),(y^n,t)\) to \(X^o,X^u,\bar{X}^o,\bar{X}^u,B^o,B^u\)
- \((y^j,x^{j+1})\) for every \(j\in[n-1]\) to \(X^o,X^u,\bar{X}^o,\bar{X}^u,B^o\)
- \((x^1,u^1),(v^m,y^n)\) to \(B^u\)
- \((s,x_0^1)\), \((y_0^j,x_0^{j+1})\) for every \(j\in[n-1]\), and \((y_0^n,t)\) to \(B_0^o,B_0^u\)
- \((s,x_1^1)\), \((y_1^j,x_1^{j+1})\) for every \(j\in[n-1]\), and \((y_1^n,t)\) to \(B_1^o,B_1^u\)

See Figure [[fig:update-flow-network]] for the complete update flow network and Table [[tab:s-t-flows]] for all (\(s,t\))-flows.

#+caption: The update flow network
#+name: fig:update-flow-network
[[file:../assets/Screen Shot 2023-02-14 at 15.08.01.png]]

#+caption: All (\(s,t\))-flows
#+name: tab:s-t-flows
| Flow            | (\(s,t\))-path                                                                                                                                                                         |
|-----------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| \(\bar{X}^o\)   | \(s,x^1,x_0^1,y_0^1,y^1,x^2,\dots,y^n,t\)                                                                                                                                              |
| \(\bar{X}^u\)   | \(s,x^1,y^1,x^2,\dots,y^n,t\)                                                                                                                                                          |
|-----------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| \(L^o\)         | \(s,u^1,v^1,u^2,\dots,v^m,t\)                                                                                                                                                          |
| \(L^u\)         | \(s,u^1,\tilde{u}_{1,2}^1,\tilde{v}_{1,2}^1,v^1,u^2,\dots,v^m,t\)                                                                                                                      |
|-----------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| \(\tilde{L}^o\) | \(s,u_{1,2}^1,v_{1,2}^1,u_{3,4}^1,v_{3,4}^1,u_{1,2}^2,\dots,v_{3,4}^m,t\)                                                                                                              |
| \(\tilde{L}^u\) | \(s,u_{1,2}^1,u_1^1,v_1^1,v_{1,2}^1,u_{3,4}^1,u_3^1,v_3^1,v_{3,4}^1,u_{1,2}^2,\dots,v_{3,4}^m,t\)                                                                                      |
|-----------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| \(X^o\)         | \(s,x^1,x_1^1,y_1^1,y^1,x^2,\dots,y^n,t\)                                                                                                                                              |
| \(X^u\)         | \(s,x^1,y^1,x^2,\dots,y^n,t\)                                                                                                                                                          |
|-----------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| \(R^o\)         | \(s,u^1,v^1,u^2,\dots,v^m,t\)                                                                                                                                                          |
| \(R^u\)         | \(s,u^1,\tilde{u}_{3,4}^1,\tilde{v}_{3,4}^1,v^1,u^2,\dots,v^m,t\)                                                                                                                      |
|-----------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| \(\tilde{R}^o\) | \(s,u_{1,2}^1,v_{1,2}^1,u_{3,4}^1,v_{3,4}^1,u_{1,2}^2,\dots,v_{3,4}^m,t\)                                                                                                              |
| \(\tilde{R}^u\) | \(s,u_{1,2}^1,u_2^1,v_2^1,v_{1,2}^1,u_{3,4}^1,u_4^1,v_4^1,v_{3,4}^1,u_{1,2}^2,\dots,v_{3,4}^m,t\)                                                                                      |
|-----------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| \(B^o\)         | \(s,x^1,y^1,x^2,\dots,y^n,t\)                                                                                                                                                          |
| \(B^u\)         | \(s,x^1,u^1,v^1,u^2,\dots,v^m,y^n,t\)                                                                                                                                                  |
|-----------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| \(\tilde{B}^o\) | \(s,\tilde{u}_{1,2}^1,\tilde{v}_{1,2}^1,\tilde{u}_{3,4}^1,\tilde{v}_{3,4}^1,\tilde{u}_{1,2}^2,\dots,\tilde{v}_{3,4}^m,t\)                                                              |
| \(\tilde{B}^u\) | \(s,\tilde{u}_{1,2}^1,u_{1,2}^1,v_{1,2}^1,\tilde{v}_{1,2}^1,\tilde{u}_{3,4}^1,u_{3,4}^1,v_{3,4}^1,\tilde{v}_{3,4}^1,\tilde{u}_{1,2}^2,\dots,\tilde{v}_{3,4}^m,t^\)                     |
|-----------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| \(B_0^o\)       | \(s,x_0^1,u_{\bar{\pi}(\bar{p}_1^1,1)}^{\bar{p}_1^1},v_{\bar{\pi}(\bar{p}_1^1,1)}^{\bar{p}_1^1},u_{\bar{\pi}(\bar{p}_2^1,1)}^{\bar{p}_2^1},\dots,v_{\bar{\pi}(\bar{p}_{l'_1}^1,1)}^{\bar{p}_{l'_1}^1},y_0^1,x_0^2,\dots,y_0^n,t\) |
| \(B_0^u\)       | \(s,x_0^1,y_0^1,x_0^2,\dots,y_0^n,t\)                                                                                                                                                  |
|-----------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| \(B_1^o\)       | \(s,x_1^1,u_{\pi(p_1^1,1)}^{p_1^1},v_{\pi(p_1^1,1)}^{p_1^1},u_{\pi(p_2^1,1)}^{p_2^1},\dots,v_{\pi(p_{l_1}^1,1)}^{p_{l_1}^1},y_1^1,x_1^2,\dots,y_1^n,t\)                                |
| \(B_1^u\)       | \(s,x_1^1,y_1^1,x_1^2,\dots,y_1^n,t\)                                                                                                                                                  |
|                 |                                                                                                                                                                                        |

Edge capacities are defined as follows.

- We set the capacity to \(2\) for edges \((u^i,v^i),(u_{1,2}^i,v_{1,2}^i),(u_{3,4}^i,v_{3,4}^i),(x^j,y^j)\) for every \(i\in[m]\) and every \(j\in[n]\).
- We set the capacity to \(1\) for edges \((u_1^i,v_1^i),(u_2^i,v_2^i),(u_3^i,v_3^i),(u_4^i,v_4^i),(\tilde{u}_{1,2}^i,\tilde{v}_{1,2}^i),(\tilde{u}_{3,4}^i,\tilde{v}_{3,4}^i),(x_0^j,y_0^j),(x_1^j,y_1^j)\) for every \(i\in[m]\) and every \(j\in[n]\).
- All remaining edge capacities are set to \(10\), that is, the number of flow pairs, which equals the sum of all demands.

We remark that vertices \(\tilde{u}_{1,2}^i,\tilde{v}_{1,2}^i,\tilde{u}_{3,4}^i,\tilde{v}_{3,4}^i\) are not necessary for this proof.
Instead, we could directly connect clause vertices \(u^i,u_{1,2}^i\) via flow pair \(L\) and \(u^i,u_{3,4}^i\) via \(R\).
Similarly, vertices \(x_0^j,y_0^j,x_1^j,y_1^j\) as well as flow pairs \(B_0,B_1\) are not necessary.
We could instead directly connect variable vertex \(x^j\) to literal vertex, say \(u_1^i\), via \(X\) (\(\bar{X}\)) if \(l_{i_1}=x_j\) (\(l_{i_1}=\bar{x}_j\)).
The vertices and flow pairs are necessary, however, for the proof of Theorem [[thm:np-hardness-k-eq-3]].

Let us quickly verify that \(G\) is a feasible update flow network.

To verify that every flow is indeed an \((s,t)\)-path, see Table [[tab:s-t-flows]].
Recall we assumed every variable \(x_j\) occurs both negatively and positively in formula \(C\).
Hence both \(\bar{P}_j\) and \(P_j\) are non-empty.
Thus both \(B_0^o\) and \(B_1^o\) form \((s,t)\)-paths.

To verify that every flow pair forms a DAG, again consider Table [[tab:s-t-flows]].

Using Lemma [[lem:update-flow-network-feasible-if]], we will show that all capacity constraints are satisfied for both the old flow network and the updated flow network in the if part of the proof of Theorem [[thm:np-hardness-special-case]].

#+caption: All blocks grouped by flow pair
#+name: tab:blocks
| \(P\)         | \(V(P^o\cap P^u)\) ordered w.r.t. \(\leq_{P^o\cup P^u}\)                                                                  | \(B^P(G)\)                                                                                 |
|---------------+---------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------|
| \(\bar{X}\)   | \(s,x^1,y^1,x^2,\dots,y^n,t\)                                                                                             | \(\{s,x^1\}\),                                                                             |
|               |                                                                                                                           | \(\{x^j,x_0^j,y_0^j,y^j\},j\in[n]\),                                                       |
|               |                                                                                                                           | \(\{y^j,x^{j+1}\},j\in[n-1]\),                                                             |
|               |                                                                                                                           | \(\{y^n,t\}\)                                                                              |
|---------------+---------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------|
| \(L\)         | \(s,u^1,v^1,u^2,\dots,v^m,t\)                                                                                             | \(\{s,u^1\}\),                                                                             |
|               |                                                                                                                           | \(\{u^i,\tilde{u}_{1,2}^i,\tilde{v}_{1,2}^i,v^i\},i\in[m]\),                               |
|               |                                                                                                                           | \(\{v^i,u^{i+1}\},i\in[m-1]\),                                                             |
|               |                                                                                                                           | \(\{v^m,t\}\)                                                                              |
|---------------+---------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------|
| \(\tilde{L}\) | \(s,u_{1,2}^1,v_{1,2}^1,u_{3,4}^1,v_{3,4}^1,u_{1,2}^2,\dots,v_{3,4}^m,t\)                                                 | \(\{s,u_{1,2}^1\}\),                                                                       |
|               |                                                                                                                           | \(\{u_{1,2}^i,u_1^i,v_1^i,v_{1,2}^i\},i\in[m]\),                                           |
|               |                                                                                                                           | \(\{v_{1,2}^i,u_{3,4}^i\},i\in[m]\),                                                       |
|               |                                                                                                                           | \(\{u_{3,4}^i,u_3^i,v_3^i,v_{3,4}^i\},i\in[m]\),                                           |
|               |                                                                                                                           | \(\{v_{3,4}^i,u_{1,2}^{i+1}\},i\in[m-1]\),                                                 |
|               |                                                                                                                           | \(\{v_{3,4}^m,t\}\)                                                                        |
|---------------+---------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------|
| \(X\)         | \(s,x^1,y^1,x^2,\dots,y^n,t\)                                                                                             | \(\{s,x^1\}\),                                                                             |
|               |                                                                                                                           | \(\{x^j,x_1^j,y_1^j,y^j\},j\in[n]\),                                                       |
|               |                                                                                                                           | \(\{y^j,x^{j+1}\},j\in[n-1]\),                                                             |
|               |                                                                                                                           | \(\{y^n,t\}\)                                                                              |
|---------------+---------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------|
| \(R\)         | \(s,u^1,v^1,u^2,\dots,v^m,t\)                                                                                             | \(\{s,u^1\}\),                                                                             |
|               |                                                                                                                           | \(\{u^i,\tilde{u}_{3,4}^i,\tilde{v}_{3,4}^i,v^i\},i\in[m]\),                               |
|               |                                                                                                                           | \(\{v^i,u^{i+1}\},i\in[m-1]\),                                                             |
|               |                                                                                                                           | \(\{v^m,t\}\)                                                                              |
|---------------+---------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------|
| \(\tilde{R}\) | \(s,u_{1,2}^1,v_{1,2}^1,u_{3,4}^1,v_{3,4}^1,u_{1,2}^2,\dots,v_{3,4}^m,t\)                                                 | \(\{s,u_{1,2}^1\}\),                                                                       |
|               |                                                                                                                           | \(\{u_{1,2}^i,u_2^i,v_2^i,v_{1,2}^i\},i\in[m]\),                                           |
|               |                                                                                                                           | \(\{v_{1,2}^i,u_{3,4}^i\},i\in[m]\),                                                       |
|               |                                                                                                                           | \(\{u_{3,4}^i,u_4^i,v_4^i,v_{3,4}^i\},i\in[m]\),                                           |
|               |                                                                                                                           | \(\{v_{3,4}^i,u_{1,2}^{i+1}\},i\in[m-1]\),                                                 |
|               |                                                                                                                           | \(\{v_{3,4}^m,t\}\)                                                                        |
|---------------+---------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------|
| \(B\)         | \(s,x^1,y^n,t\)                                                                                                           | \(\{s,x^1\}\), \(\{x^j,y^j,u^i,v^i\mid j\in[n],i\in[m]\}\), \(\{y^n,t\}\)                  |
|---------------+---------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------|
| \(\tilde{B}\) | \(s,\tilde{u}_{1,2}^1,\tilde{v}_{1,2}^1,\tilde{u}_{3,4}^1,\tilde{v}_{3,4}^1,\tilde{u}_{1,2}^2,\dots,\tilde{v}_{3,4}^m,t\) | \(\{s,\tilde{u}_{1,2}^1\}\),                                                               |
|               |                                                                                                                           | \(\{\tilde{u}_{1,2}^i,u_{1,2}^i,v_{1,2}^i,\tilde{v}_{1,2}^i\},i\in[m]\),                   |
|               |                                                                                                                           | \(\{\tilde{v}_{1,2}^i,\tilde{u}_{3,4}^i\},i\in[m]\),                                       |
|               |                                                                                                                           | \(\{\tilde{u}_{3,4}^i,u_{3,4}^i,v_{3,4}^i,\tilde{v}_{3,4}^i\},i\in[m]\),                   |
|               |                                                                                                                           | \(\{\tilde{v}_{3,4}^i,\tilde{u}_{1,2}^{i+1}\},i\in[m-1]\),                                 |
|               |                                                                                                                           | \(\{\tilde{v}_{3,4}^m,t\}\)                                                                |
|---------------+---------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------|
| \(B_0\)       | \(s,x_0^1,y_0^1,x_0^2,\dots,y_0^n,t\)                                                                                     | \(\{s,x_0^1\}\),                                                                           |
|               |                                                                                                                           | \(\{x_0^j,u_{\bar{\pi}(i,j)}^i},v_{\bar{\pi}(i,j)}^i},y_0^j\mid i\in\bar{P}_j\},j\in[n]\), |
|               |                                                                                                                           | \(\{y_0^n,t\}\)                                                                            |
|---------------+---------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------|
| \(B_1\)       | \(s,x_1^1,y_1^1,x_1^2,\dots,y_1^n,t\)                                                                                     | \(\{s,x_1^1\}\),                                                                           |
|               |                                                                                                                           | \(\{x_1^j,u_{\pi(i,j)}^i},v_{\pi(i,j)}^i},y_1^j\mid i\in P_j\},j\in[n]\),                  |
|               |                                                                                                                           | \(\{y_1^n,t\}\)                                                                            |
|               |                                                                                                                           |                                                                                            |

*** The Proof

Before we prove Theorem [[thm:np-hardness-special-case]], let us show that every feasible block sequence for the update flow network specified in the previous section satisfies the following properties.

#+name: lem:feasible-block-sequence-properties
#+begin_lem
Let \(\mathcal{B}\) be a feasible block sequence for update flow network \(G\).
Then:

1. @@latex:\label{itm:lem-feasible-block-sequence-properties-1}@@
   For every \(i\in[m]\), \(\mathcal{B}(u^i,L)<\mathcal{B}(x^1,B)\) or \(\mathcal{B}(u^i,R)<\mathcal{B}(x^1,B)\).
         
2. @@latex:\label{itm:lem-feasible-block-sequence-properties-2}@@
   For every \(i\in[m]\),

   1) @@latex:\label{itm:lem-feasible-block-sequence-properties-2-1}@@
      \(\mathcal{B}(\tilde{u}_{1,2}^i,\tilde{B})<\mathcal{B}(u^i,L)\), and
   
   2) @@latex:\label{itm:lem-feasible-block-sequence-properties-2-2}@@
      \(\mathcal{B}(\tilde{u}_{3,4}^i,\tilde{B})<\mathcal{B}(u^i,R)\).

3. @@latex:\label{itm:lem-feasible-block-sequence-properties-3}@@
   For every \(i\in[m]\),

   1) @@latex:\label{itm:lem-feasible-block-sequence-properties-3-1}@@
      \(\mathcal{B}(u_{1,2}^i,\tilde{L})<\mathcal{B}(\tilde{u}_{1,2}^i,\tilde{B})\) or \(\mathcal{B}(u_{1,2}^i,\tilde{R})<\mathcal{B}(\tilde{u}_{1,2}^i,\tilde{B})\), and

   2) @@latex:\label{itm:lem-feasible-block-sequence-properties-3-2}@@
      \(\mathcal{B}(u_{3,4}^i,\tilde{L})<\mathcal{B}(\tilde{u}_{3,4}^i,\tilde{B})\) or \(\mathcal{B}(u_{3,4}^i,\tilde{R})<\mathcal{B}(\tilde{u}_{3,4}^i,\tilde{B})\).

4. @@latex:\label{itm:lem-feasible-block-sequence-properties-4}@@
   For every \(j\in[n]\), \(\mathcal{B}(x^1,B)<\mathcal{B}(x^j,\bar{X})\) or \(\mathcal{B}(x^1,B)<\mathcal{B}(x^j,X)\).

5. @@latex:\label{itm:lem-feasible-block-sequence-properties-5}@@
   For every \(i\in[m]\) and every \(j\in[n]\),

   1) @@latex:\label{itm:lem-feasible-block-sequence-properties-5-1}@@
      if \(l_{i_1}=\bar{x}_j\), then \(\mathcal{B}(x_0^j,B_0)<\mathcal{B}(u_{1,2}^i,\tilde{L})\), and if \(l_{i_1}=x_j\), then \(\mathcal{B}(x_1^j,B_1)<\mathcal{B}(u_{1,2}^i,\tilde{L})\),

   2) @@latex:\label{itm:lem-feasible-block-sequence-properties-5-2}@@
      if \(l_{i_2}=\bar{x}_j\), then \(\mathcal{B}(x_0^j,B_0)<\mathcal{B}(u_{1,2}^i,\tilde{R})\), and if \(l_{i_2}=x_j\), then \(\mathcal{B}(x_1^j,B_1)<\mathcal{B}(u_{1,2}^i,\tilde{R})\),

   3) @@latex:\label{itm:lem-feasible-block-sequence-properties-5-3}@@
      if \(l_{i_3}=\bar{x}_j\), then \(\mathcal{B}(x_0^j,B_0)<\mathcal{B}(u_{3,4}^i,\tilde{L})\), and if \(l_{i_3}=x_j\), then \(\mathcal{B}(x_1^j,B_1)<\mathcal{B}(u_{3,4}^i,\tilde{L})\),

   4) @@latex:\label{itm:lem-feasible-block-sequence-properties-5-4}@@
      if \(l_{i_4}=\bar{x}_j\), then \(\mathcal{B}(x_0^j,B_0)<\mathcal{B}(u_{3,4}^i,\tilde{R})\), and if \(l_{i_4}=x_j\), then \(\mathcal{B}(x_1^j,B_1)<\mathcal{B}(u_{3,4}^i,\tilde{R})\).

6. @@latex:\label{itm:lem-feasible-block-sequence-properties-6}@@
   For every \(j\in[n]\),

   1) @@latex:\label{itm:lem-feasible-block-sequence-properties-6-1}@@
      \(\mathcal{B}(x^j,\bar{X})<\mathcal{B}(x_0^j,B_0)\), and

   2) @@latex:\label{itm:lem-feasible-block-sequence-properties-6-2}@@
      \(\mathcal{B}(x^j,X)<\mathcal{B}(x_1^j,B_1)\).
#+end_lem

#+begin_proof
We show every property by contradiction.
More precisely, for every property, we assume it doesn't hold and then obtain an edge and a round such that the corresponding capacity constraint is violated, which contradicts the feasibility of block sequence \(\mathcal{B}\).

Since every flow pair has demand \(1\), we may use [[remark:capacity-constraint-blocks-demand-1]] to argue about capacity constraints.

#+latex: \paragraph{\ref{itm:lem-feasible-block-sequence-properties-1}, \ref{itm:lem-feasible-block-sequence-properties-3}.}
We only show \ref{itm:lem-feasible-block-sequence-properties-1}; the proofs for \ref{itm:lem-feasible-block-sequence-properties-3-1} and \ref{itm:lem-feasible-block-sequence-properties-3-2} are analogous.
Suppose not.
Then obtain \(i\in[m]\) such that both \(\mathcal{B}(u^i,L)\geq\mathcal{B}(x^1,B)\) and \(\mathcal{B}(u^i,R)\geq\mathcal{B}(x^1,B)\).
We show that the capacity constraint for edge \((u^i,v^i)\) is violated for round \(\mathcal{B}(x^1,B)\).

We have that

1. \(\alpha_L((u^i,v^i),B_{\mathcal{B}(x^1,B)-1})=\mathrm{active}\), since \(b(u^i,L)\notin B_{\mathcal{B}(x^1,B)-1}\) and \((u^i,v^i)\in E(L^o)\),
   
2. \(\alpha_R((u^i,v^i),B_{\mathcal{B}(x^1,B)-1})=\mathrm{active}\), since \(b(u^i,R)\notin B_{\mathcal{B}(x^1,B)-1}\) and \((u^i,v^i)\in E(R^o)\), and

3. \(\alpha_B((u^i,v^i),B_{\mathcal{B}(x^1,B)})=\mathrm{active}\), since \(b(u^i,B)=b(x^1,B)\in B_{\mathcal{B}(x^1,B)}\) and \((u^i,v^i)\in E(B^u)\).

Hence
\begin{align*}
\lvert\{P\in\mathcal{P}\mid&\alpha_P((u^i,v^i),B_{\mathcal{B}(x^1,B)-1})=\mathrm{active}\text{ or }\\
&\alpha_P((u^i,v^i),B_{\mathcal{B}(x^1,B)})=\mathrm{active}\}\rvert\geq\lvert\{L,R,B\}\rvert=3>2=c(u^i,v^i)
\end{align*}

#+latex: \paragraph{\ref{itm:lem-feasible-block-sequence-properties-2}, \ref{itm:lem-feasible-block-sequence-properties-5}, \ref{itm:lem-feasible-block-sequence-properties-6}.}
We only show \ref{itm:lem-feasible-block-sequence-properties-2-1}; the proofs for \ref{itm:lem-feasible-block-sequence-properties-2-2}, \ref{itm:lem-feasible-block-sequence-properties-5-1}, \ref{itm:lem-feasible-block-sequence-properties-5-2}, \ref{itm:lem-feasible-block-sequence-properties-5-3}, \ref{itm:lem-feasible-block-sequence-properties-5-4}, \ref{itm:lem-feasible-block-sequence-properties-6-1}, and \ref{itm:lem-feasible-block-sequence-properties-6-2} are similar.
Suppose not.
Then obtain \(i\in[m]\) such that \(\mathcal{B}(\tilde{u}_{1,2}^i,\tilde{B})\geq\mathcal{B}(u^i,L)\).
We show that the capacity constraint for edge \((\tilde{u}_{1,2}^i,\tilde{v}_{1,2}^i)\) is violated for round \(\mathcal{B}(u^i,L)\).

We have that

1. \(\alpha_{\tilde{B}}((\tilde{u}_{1,2}^i,\tilde{v}_{1,2}^i),B_{\mathcal{B}(u^i,L)-1})=\mathrm{active}\), since \(b(\tilde{u}_{1,2}^i,\tilde{B})\notin B_{\mathcal{B}(u^i,L)-1}\) and \((\tilde{u}_{1,2}^i,\tilde{v}_{1,2}^i)\in E(\tilde{B}^o)\), and

2. \(\alpha_L((\tilde{u}_{1,2}^i,\tilde{v}_{1,2}^i),B_{\mathcal{B}(u^i,L)})=\mathrm{active}\), since \(b(\tilde{u}_{1,2}^i,L)=b(u^i,L)\in B_{\mathcal{B}(u^i,L)}\) and \((\tilde{u}_{1,2}^i,\tilde{v}_{1,2}^i)\in E(L^u)\).

Hence
\begin{align*}
\lvert\{P\in\mathcal{P}\mid&\alpha_P((\tilde{u}_{1,2}^i,\tilde{v}_{1,2}^i),B_{\mathcal{B}(u^i,L)-1})=\mathrm{active}\text{ or }\\
&\alpha_P((\tilde{u}_{1,2}^i,\tilde{v}_{1,2}^i),B_{\mathcal{B}(u^i,L)})=\mathrm{active}\}\rvert\geq\lvert\{\tilde{B},L\}\rvert=2>1=c(\tilde{u}_{1,2}^i,\tilde{v}_{1,2}^i)
\end{align*}

#+latex: \paragraph{\ref{itm:lem-feasible-block-sequence-properties-4}.}
Suppose not.
Then obtain \(j\in[n]\) such that both \(\mathcal{B}(x^1,B)\geq\mathcal{B}(x^j,\bar{X})\) and \(\mathcal{B}(x^1,B)\geq\mathcal{B}(x^j,X)\).
We show that the capacity constraint for edge \((x^j,y^j)\) is violated for round \(\mathcal{B}(x^1,B)\).

We have that

1. \(\alpha_B((x^j,y^j),B_{\mathcal{B}(x^1,B)-1})=\mathrm{active}\), since \(b(x^j,B)=b(x^1,B)\notin B_{\mathcal{B}(x^1,B)-1}\) and \((x^j,y^j)\in E(B^o)\),
   
2. \(\alpha_{\bar{X}}((x^j,y^j),B_{\mathcal{B}(x^1,B)})=\mathrm{active}\), since \(b(x^j,\bar{X})\notin B_{\mathcal{B}(x^1,B)}\) and \((x^j,y^j)\in E(\bar{X}^u)\), and

3. \(\alpha_{X}((x^j,y^j),B_{\mathcal{B}(x^1,B)})=\mathrm{active}\), since \(b(x^j,X)\notin B_{\mathcal{B}(x^1,B)}\) and \((x^j,y^j)\in E(X^u)\).

Hence
\begin{align*}
\lvert\{P\in\mathcal{P}\mid&\alpha_P((x^j,y^j),B_{\mathcal{B}(x^1,B)-1})=\mathrm{active}\text{ or }\\
&\alpha_P((x^j,y^j),B_{\mathcal{B}(x^1,B)})=\mathrm{active}\}\rvert\geq\lvert\{B,\bar{X},X\}\rvert=3>2=c(x^j,y^j)
\end{align*}
#+end_proof

We are now ready to prove Theorem [[thm:np-hardness-special-case]].

#+attr_latex: :options [Proof of Theorem [[thm:np-hardness-special-case]]]
#+begin_proof
We show that there is a satisfying assignment \(\sigma\) for 4CNF formula \(C\) iff there is a feasible block sequence \(\mathcal{B}\) for the corresponding update flow network \(G\), which, by Corollary [[corollary:block-sequence-iff-update-sequence]], is the case iff there is a feasible update sequence for \(G\).
We will choose \(\sigma\), \(\mathcal{B}\), respectively, such that \(\sigma\) assigns \(1\) to variable \(x_j\) iff \(\mathcal{B}(x^j,\bar{X})>\mathcal{B}(x^1,B)\).

#+latex: \paragraph{Only-if part.}
Let \(\mathcal{B}\) be a feasible block sequence for \(G\).
We define assignment \(\sigma\) as follows:
For every variable \(x_j\), we assign \(1\) to \(x_j\) iff \(\mathcal{B}(x^j,\bar{X})>\mathcal{B}(x^1,B)\).
We now show that \(\sigma\) is a satisfying assignment for \(C\).

Let \(C_i=(l_{i_1}\vee l_{i_2}\vee l_{i_3}\vee l_{i_4})\) be a clause.
We show that \(\sigma\) satisfies \(C_i\) by obtaining a literal that evaluates to \(1\).

Consider round \(\mathcal{B}(x^1,B)\).
By Lemma [[lem:feasible-block-sequence-properties]] \ref{itm:lem-feasible-block-sequence-properties-1}, \(\mathcal{B}(x^1,B)>\mathcal{B}(u^i,L)\) or \(\mathcal{B}(x^1,B)>\mathcal{B}(u^i,R)\).
We only consider the former case \(\mathcal{B}(x^1,B)>\mathcal{B}(u^i,L)\); the latter one is analogous.

By Lemma [[lem:feasible-block-sequence-properties]] \ref{itm:lem-feasible-block-sequence-properties-2-1}, \(\mathcal{B}(u^i,L)>\mathcal{B}(\tilde{u}_{1,2}^i,\tilde{B})\).
By Lemma [[lem:feasible-block-sequence-properties]] \ref{itm:lem-feasible-block-sequence-properties-3-1}, \(\mathcal{B}(\tilde{u}_{1,2}^i,\tilde{B})>\mathcal{B}(u_{1,2}^i,\tilde{L})\) or \(\mathcal{B}(\tilde{u}_{1,2}^i,\tilde{B})>\mathcal{B}(u_{1,2}^i,\tilde{R})\).
We only consider the latter case \(\mathcal{B}(\tilde{u}_{1,2}^i,\tilde{B})>\mathcal{B}(u_{1,2}^i,\tilde{R})\); the former one is analogous.

Let \(x_j\) be the variable corresponding to literal \(l_{i_2}\).
We consider the cases \(l_{i_2}=\bar{x}_j\) and \(l_{i_2}=x_j\) separately.

Case \(l_{i_2}=\bar{x}_j\).
By Lemma [[lem:feasible-block-sequence-properties]] \ref{itm:lem-feasible-block-sequence-properties-5-2}, \(\mathcal{B}(u_{1,2}^i,\tilde{R})>\mathcal{B}(x_0^j,B_0)\).
By Lemma [[lem:feasible-block-sequence-properties]] \ref{itm:lem-feasible-block-sequence-properties-6-1}, \(\mathcal{B}(x_0^j,B_0)>\mathcal{B}(x^j,\bar{X})\).
Putting everything together yields the following chain of inequalities:
\[
\mathcal{B}(x^1,B)>
\mathcal{B}(u^i,L)>
\mathcal{B}(\tilde{u}_{1,2}^i,\tilde{B})>
\mathcal{B}(u_{1,2}^i,\tilde{R})>
\mathcal{B}(x_0^j,B_0)>
\mathcal{B}(x^j,\bar{X})
\]
Hence, by definition of our assignment, variable \(x_j\) is assigned \(0\).
Hence literal \(l_{i_2}=\bar{x}_j\) evaluates to \(1\).

Case \(l_{i_2}=x_j\).
By Lemma [[lem:feasible-block-sequence-properties]] \ref{itm:lem-feasible-block-sequence-properties-5-2}, \(\mathcal{B}(u_{1,2}^i,\tilde{R})>\mathcal{B}(x_1^j,B_1)\).
By Lemma [[lem:feasible-block-sequence-properties]] \ref{itm:lem-feasible-block-sequence-properties-6-2}, \(\mathcal{B}(x_1^j,B_1)>\mathcal{B}(x^j,X)\).
Putting everything together yields the following chain of inequalities:
\[
\mathcal{B}(x^1,B)>
\mathcal{B}(u^i,L)>
\mathcal{B}(\tilde{u}_{1,2}^i,\tilde{B})>
\mathcal{B}(u_{1,2}^i,\tilde{R})>
\mathcal{B}(x_1^j,B_1)>
\mathcal{B}(x^j,X)
\]
Hence, by Lemma [[lem:feasible-block-sequence-properties]] \ref{itm:lem-feasible-block-sequence-properties-4}, \(\mathcal{B}(x^j,\bar{X})>\mathcal{B}(x^1,B)\).
Hence, by definition of our assignment, variable \(x_j\) is assigned \(1\).
Hence literal \(l_{i_2}=x_j\) evaluates to \(1\).

#+latex: \paragraph{If part.}
Let \(\sigma\) be a satisfying assignment for \(C\).
We construct a feasible block sequence \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{11})\) for \(G\) as follows.
The basic idea is to update blocks induced by

- variable vertices corresponding to variables that are assigned \(1\) and

- clause vertices corresponding to satisfied clauses


before we update block \(b(x^1,B)\), and all other blocks afterwards.
We now specify \(\mathscr{B}_1,\dots,\mathscr{B}_{11}\) in detail.

1. For every variable \(x_j\), if \(x_j\) is assigned \(1\), we add block \(b(x^j,X)\) to \(\mathscr{B}_1\), otherwise we add \(b(x^j,\bar{X})\).
   That is,
   \[
   \mathscr{B}_1=\{b(x^j,X)\mid\sigma(x_j)=1\}\cup\{b(x^j,\bar{X}\mid\sigma(x_j)=0\}.
   \]
   
2. For every variable \(x_j\), if \(x_j\) is assigned \(1\), we add block \(b(x_1^j,B_1)\) to \(\mathscr{B}_2\), otherwise we add \(b(x_0^j,B_0)\).
   That is,
   \[
   \mathscr{B}_2=\{b(x_1^j,B_1)\mid\sigma(x_j)=1\}\cup\{b(x_0^j,B_0\mid\sigma(x_j)=0\}.
   \]

3. For every clause \(C_i=(l_{i_1}\vee l_{i_2}\vee l_{i_3}\vee l_{i_4})\),

   1) if \(l_{i_1}\) evaluates to \(1\), we add block \(b(u_{1,2}^i,\tilde{L})\) to \(\mathscr{B}_3\),

   2) if \(l_{i_2}\) evaluates to \(1\), we add \(b(u_{1,2}^i,\tilde{R})\),

   3) if \(l_{i_3}\) evaluates to \(1\), we add \(b(u_{3,4}^i,\tilde{L})\), and

   4) if \(l_{i_4}\) evaluates to \(1\), we add \(b(u_{3,4}^i,\tilde{R})\).

   That is,
   \begin{align*}
   \mathscr{B}_3=&\{b(u_{1,2}^i,\tilde{L})\mid\sigma(l_{i_1})=1\}\cup
   \{b(u_{1,2}^i,\tilde{R})\mid\sigma(l_{i_2})=1\}\cup\\
   &\{b(u_{3,4}^i,\tilde{L})\mid\sigma(l_{i_3})=1\}\cup
   \{b(u_{3,4}^i,\tilde{R})\mid\sigma(l_{i_4})=1\}.
   \end{align*}
   
4. For every clause \(C_i=(l_{i_1}\vee l_{i_2}\vee l_{i_3}\vee l_{i_4})\), if the left half \((l_{i_1}\vee l_{i_2})\) of \(C_i\) is satisfied, we add block \(b(\tilde{u}_{1,2}^i,\tilde{B})\) to \(\mathscr{B}_4\), and if the right half \((l_{i_3}\vee l_{i_4})\) is satisfied, we add \(b(\tilde{u}_{3,4}^i,\tilde{B})\).
   That is,
   \begin{align*}
   \mathscr{B}_4=&\{b(\tilde{u}_{1,2}^i,\tilde{B})\mid\sigma(l_{i_1})=1\text{ or }\sigma(l_{i_2})=1\}\cup\\
   &\{b(\tilde{u}_{3,4}^i,\tilde{B})\mid\sigma(l_{i_3})=1\text{ or }\sigma(l_{i_4})=1\}.
   \end{align*}
   
5. For every clause \(C_i=(l_{i_1}\vee l_{i_2}\vee l_{i_3}\vee l_{i_4})\), if the left half \((l_{i_1}\vee l_{i_2})\) of \(C_i\) is satisfied, we add block \(b(u^i,L)\) to \(\mathscr{B}_5\), and if the right half \((l_{i_3}\vee l_{i_4})\) is satisfied, we add \(b(u^i,R)\).
   That is,
   \begin{align*}
   \mathscr{B}_5=&\{b(u^i,L)\mid\sigma(l_{i_1})=1\text{ or }\sigma(l_{i_2})=1\}\cup\\
   &\{b(u^i,R)\mid\sigma(l_{i_3})=1\text{ or }\sigma(l_{i_4})=1\}.
   \end{align*}
   
6. \(\mathscr{B}_6=\{b(x^1,B)\}\).

7. For every variable \(x_j\), if \(x_j\) is assigned \(0\), we add block \(b(x^j,X)\) to \(\mathscr{B}_7\), otherwise we add \(b(x^j,\bar{X})\).
   That is,
   \[
   \mathscr{B}_7=\{b(x^j,X)\mid\sigma(x_j)=0\}\cup\{b(x^j,\bar{X}\mid\sigma(x_j)=1\}.
   \]
   
8. For every variable \(x_j\), if \(x_j\) is assigned \(0\), we add block \(b(x_1^j,B_1)\) to \(\mathscr{B}_8\), otherwise we add \(b(x_0^j,B_0)\).
   That is,
   \[
   \mathscr{B}_8=\{b(x_1^j,B_1)\mid\sigma(x_j)=0\}\cup\{b(x_0^j,B_0\mid\sigma(x_j)=1\}.
   \]

9. For every clause \(C_i=(l_{i_1}\vee l_{i_2}\vee l_{i_3}\vee l_{i_4})\),

   1) if \(l_{i_1}\) evaluates to \(0\), we add block \(b(u_{1,2}^i,\tilde{L})\) to \(\mathscr{B}_9\),

   2) if \(l_{i_2}\) evaluates to \(0\), we add \(b(u_{1,2}^i,\tilde{R})\),

   3) if \(l_{i_3}\) evaluates to \(0\), we add \(b(u_{3,4}^i,\tilde{L})\), and

   4) if \(l_{i_4}\) evaluates to \(0\), we add \(b(u_{3,4}^i,\tilde{R})\).

   That is,
   \begin{align*}
   \mathscr{B}_9=&\{b(u_{1,2}^i,\tilde{L})\mid\sigma(l_{i_1})=0\}\cup
   \{b(u_{1,2}^i,\tilde{R})\mid\sigma(l_{i_2})=0\}\cup\\
   &\{b(u_{3,4}^i,\tilde{L})\mid\sigma(l_{i_3})=0\}\cup
   \{b(u_{3,4}^i,\tilde{R})\mid\sigma(l_{i_4})=0\}.
   \end{align*}

1. For every clause \(C_i=(l_{i_1}\vee l_{i_2}\vee l_{i_3}\vee l_{i_4})\), if the left half \((l_{i_1}\vee l_{i_2})\) of \(C_i\) is unsatisfied, we add block \(b(\tilde{u}_{1,2}^i,\tilde{B})\) to \(\mathscr{B}_{10}\), and if the right half \((l_{i_3}\vee l_{i_4})\) is unsatisfied, we add \(b(\tilde{u}_{3,4}^i,\tilde{B})\).
   That is,
   \begin{align*}
   \mathscr{B}_{10}=&\{b(\tilde{u}_{1,2}^i,\tilde{B})\mid\sigma(l_{i_1})=0\text{ and }\sigma(l_{i_2})=0\}\cup\\
   &\{b(\tilde{u}_{3,4}^i,\tilde{B})\mid\sigma(l_{i_3})=0\text{ and }\sigma(l_{i_4})=0\}.
   \end{align*}

1. For every clause \(C_i=(l_{i_1}\vee l_{i_2}\vee l_{i_3}\vee l_{i_4})\), if the left half \((l_{i_1}\vee l_{i_2})\) of \(C_i\) is unsatisfied, we add block \(b(u^i,L)\) to \(\mathscr{B}_{11}\), and if the right half \((l_{i_3}\vee l_{i_4})\) is unsatisfied, we add \(b(u^i,R)\).
   That is,
   \begin{align*}
   \mathscr{B}_{11}=&\{b(u^i,L)\mid\sigma(l_{i_1})=0\text{ and }\sigma(l_{i_2})=0\}\cup\\
   &\{b(u^i,R)\mid\sigma(l_{i_3})=0\text{ and }\sigma(l_{i_4})=0\}.
   \end{align*}

By Remark [[remark:block-sequence]], we may ignore all other blocks.

We now show that block sequence \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{11})\) is feasible by verifying that the capacity constraint is satisfied for every edge and every \(\ell\in[11]\).
Since every flow pair has demand \(1\), we

- may use remark [[remark:capacity-constraint-blocks-demand-1]] again to argue about capacity constraints, and
  
- only have to consider edges with capacity less than \(10\), that is, the number of flow pairs.


For every such edge \(e\), we proceed as follows.

1. First, for every \(\ell\in\{0,\dots,11\}\) and every flow pair \(P\), we determine if \(e\) is on the transient (\(s,t\))-path for \(P\) after updating all blocks in \(B_{\ell}\), that is, we determine if \(\alpha_P(e,B_{\ell})=\mathrm{active}\).

2. Next, for every \(\ell\in\{0,\dots,11\}\), we determine the set of flow pairs \(P\) such that \(\alpha_P(e,B_{\ell})=\mathrm{active}\), that is, we determine the set \(\mathcal{P}(e,\ell):=\{P\in\mathcal{P}\mid\alpha_P(e,B_{\ell})=\mathrm{active}\}\).

3. Then, for every \(\ell\in[11]\), we determine the set \(\mathcal{P}'(e,\ell):=\mathcal{P}(e,\ell-1)\cup\mathcal{P}(e,\ell)=\{P\in\mathcal{P}\mid\alpha_P(e,B_{\ell-1})=\mathrm{active}\text{ or }\alpha_P(e,B_{\ell})=\mathrm{active}\}\).

4. Finally, for every \(\ell\in[11]\), we verify that the cardinality of the set \(\mathcal{P}'(e,\ell)\) obtained in the previous step is at most \(c(e)\).


#+latex: \paragraph{\((x^j,y^j)\)}
Let \(j\in[n]\).
Then edge \((x^j,y^j)\) is used by flow pairs \(\bar{X},X,B\).

Since \((x^j,y^j)\in E(\bar{X}^u\setminus\bar{X}^o)\), by Lemma [[lem:alpha-block-cases-edge]],
\[\alpha_{\bar{X}}((x^j,y^j),B_{\ell})=
\begin{cases}
\mathrm{active} & \text{if }\sigma(x_j)=1\text{ and }\ell\geq 7\\
\mathrm{active} & \text{if }\sigma(x_j)=0\text{ and }\ell\geq 1\\
\mathrm{inactive} & \text{otherwise}.
\end{cases}\]

Since \((x^j,y^j)\in E(X^u\setminus X^o)\), by Lemma [[lem:alpha-block-cases-edge]],
\[\alpha_X((x^j,y^j),B_{\ell})=
\begin{cases}
\mathrm{active} & \text{if }\sigma(x_j)=1\text{ and }\ell\geq 1\\
\mathrm{active} & \text{if }\sigma(x_j)=0\text{ and }\ell\geq 7\\
\mathrm{inactive} & \text{otherwise}.
\end{cases}\]

Since \((x^j,y^j)\in E(B^o\setminus B^u)\) and \(b(x^j,B)=b(x^1,B)\in\mathscr{B}_6\), by Lemma [[lem:alpha-block-cases-edge]],
\[\alpha_B}((x^j,y^j),B_{\ell})=
\begin{cases}
\mathrm{active} & \ell<6\\
\mathrm{inactive} & \ell\geq 6.
\end{cases}\]

Hence,
\[\mathcal{P}((x^j,y^j),\ell)=
\begin{cases}
\{B\} & \ell<1\\
\{X,B\} & \sigma(x_j)=1\text{ and }1\leq\ell<6\\
\{X\} & \sigma(x_j)=1\text{ and }\ell=6\\
\{\bar{X},B\} & \sigma(x_j)=0\text{ and }1\leq\ell<6\\
\{\bar{X}\} & \sigma(x_j)=0\text{ and }\ell=6\\
\{\bar{X},X\} & \ell\geq 7.
\end{cases}\]

Hence,
\[\mathcal{P}'((x^j,y^j),\ell)=
\begin{cases}
\{X,B\} & \sigma(x_j)=1\text{ and }\ell<7\\
\{\bar{X},B\} & \sigma(x_j)=0\text{ and }\ell<7\\
\{\bar{X},X\} & \ell\geq 7.
\end{cases}\]

Hence \(\lvert\mathcal{P}'((x^j,y^j),\ell)\rvert=2=c(x^j,y^j)\) for every \(\ell\in[11]\).

- [ ] Repeat for other edges.
#+end_proof

** Merging Flow Pairs

We now prove the [[lem:merging-flow-pairs][Merging Lemma]].

Let \(G=(V,E,\mathcal{P},s,t,c)\) be an update flow network with \(\lvert\mathcal{P}\rvert\geq 2\), and let \(F,F'\in\mathcal{P}\) and \(v_F,v_{F'}\in V\) such that they satisfy properties \ref{itm:lem-merging-flow-pairs-property-1}, \ref{itm:lem-merging-flow-pairs-property-2}, and \ref{itm:lem-merging-flow-pairs-property-3} (see Figure [[fig:lem-merging-flow-pairs-g]]).
We construct an update flow network \(\tilde{G}=(\tilde{V},\tilde{E},\tilde{\mathcal{P}},s,t,\tilde{c})\) with \(\lvert\tilde{\mathcal{P}}\rvert=\lvert\mathcal{P}\rvert-1\) such that there is a feasible block sequence \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) for \(G\) iff there is a feasible block sequence \(\tilde{\mathcal{B}}=(\tilde{\mathscr{B}}_1,\dots,\tilde{\mathscr{B}}_{\ell})\) for \(\tilde{G}\) as follows.

#+name: fig:lem-merging-flow-pairs-g
#+caption: Flow pairs \(F\) and \(F'\) in update flow network \(G\)
[[file:../assets/Screen Shot 2023-02-19 at 13.28.41.png]]

*** The Construction

Intuitively, we merge flow pairs \(F\) and \(F'\) into a single flow pair \(\tilde{F}\) by concatenating \(F\) and \(F'\).
More precisely, \(\tilde{F}\) will be the union of \(F\) and \(F'\) except that we replace edges \((v_F,t)\) and \((s,v_{F'})\) by edge \((v_F,v_{F'})\) (see Figure [[fig:lem-merging-flow-pairs-g-tilde]] for an illustration).
More formally, we define flow pair \(\tilde{F}\) as follows:

\begin{align*}
\tilde{E}(\tilde{F}^o)&=\left(E(F^o)\setminus\{(v_F,t)\}\right)\cup\left(E(F'^o)\setminus\{(s,v_{F'})\}\right)\cup\{(v_F,v_{F'})\}\\
\tilde{E}(\tilde{F}^u)&=\left(E(F^u)\setminus\{(v_F,t)\}\right)\cup\left(E(F'^u)\setminus\{(s,v_{F'})\}\right)\cup\{(v_F,v_{F'})\}\\
\tilde{V}(\tilde{F}^o)&=\tilde{V}(\tilde{E}(\tilde{F}^o))\\
\tilde{V}(\tilde{F}^u)&=\tilde{V}(\tilde{E}(\tilde{F}^u))\\
\tilde{d}_{\tilde{F}}&=d_F
\end{align*}

#+name: fig:lem-merging-flow-pairs-g-tilde
#+caption: Flow pair \(\tilde{F}\) in update flow network \(\tilde{G}\)
[[file:../assets/Screen Shot 2023-02-19 at 13.29.07.png]]

Update flow network \(\tilde{G}=(\tilde{V},\tilde{E},\tilde{\mathcal{P}},s,t,\tilde{c})\) is defined as follows:

\begin{align*}
\tilde{\mathcal{P}}&=\mathcal{P}\setminus\{F,F'\}\cup\{\tilde{F}\}\\
\tilde{V}&=\bigcup_{\tilde{P}\in\tilde{\mathcal{P}}}\tilde{V}(\tilde{P}^o\cup\tilde{P}^u)\\
\tilde{E}&=\bigcup_{\tilde{P}\in\tilde{\mathcal{P}}}\tilde{E}(\tilde{P}^o\cup\tilde{P}^u)\\
\tilde{c}(\tilde{e})&=
\begin{cases}
\sum_{\tilde{P}\in\tilde{\mathcal{P}}:\tilde{e}\in\tilde{E}(\tilde{P}^o\cup\tilde{P}^u)}\tilde{d}_{\tilde{P}} & \text{if }\tilde{e}=(v_F,v_{F'})\\
c(\tilde{e}) & \text{otherwise}
\end{cases}
\end{align*}

Let us quickly verify that \(\tilde{G}\) is a feasible update flow network.

Let \(\tilde{P}\in\tilde{\mathcal{P}}\).
If \(\tilde{P}\neq\tilde{F}\), then \(\tilde{P}\in\mathcal{P}\) and hence, by feasibility of update flow network \(G\), both \(\tilde{P}^o\) and \(\tilde{P}^u\) are \((s,t)\)-paths in \(\tilde{G}\) and \(\tilde{P}\) forms a DAG.
Now suppose \(\tilde{P}=\tilde{F}\).
By feasibility of \(G\) and construction of \(\tilde{F}\), \(\tilde{F}^o\) (\(\tilde{F}^u\)) comprises the \((s,v_F)\)-path in \(F^o\) (\(F^u\)), edge \((v_F,v_{F'})\), and the \((v_{F'},t)\)-path in \(F'^o\) (\(F'^u\)), and hence forms an \((s,t)\)-path.
Moreover, since, again by feasibility of \(G\), both \(F\) and \(F'\) form DAGs, and edge \((v_F,v_{F'})\) does not introduce a cycle, as \(F\) and \(F'\) have no common vertices other than \(s,t\) by assumption, \(\tilde{F}\) forms a DAG.

Using Lemma [[lem:update-flow-network-feasible-if]], we will show that all capacity constraits are satisfied for both the old flow network and the updated flow network in the if part of the proof of the [[lem:merging-flow-pairs][Merging Lemma]].

We denote notations such as \(b(v,P)\), \(B_i\), and \(\alpha_P(e,B)\) referring to update flow network \(\tilde{G}\) by \(\tilde{b}(v,P)\), \(\tilde{B}_i\), and \(\tilde{\alpha}_P(e,B)\).

*** The Proof

Our goal is to show that there is a feasible block sequence \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) for \(G\) iff there is a feasible block sequence \(\tilde{\mathcal{B}}=(\tilde{\mathscr{B}}_1,\dots,\tilde{\mathscr{B}}_{\ell})\) for \(\tilde{G}\).
We will choose \(\mathcal{B},\tilde{\mathcal{B}}\), respectively, such that, for every block \(b\) contained in both \(G\) and \(\tilde{G}\), \(b\) is updated in round \(i\in[\ell]\) in \(\mathcal{B}\) iff it is updated in round \(i\) in \(\tilde{\mathcal{B}}\), that is, \(\mathcal{B}(b)=\tilde{\mathcal{B}}(b)\).
The key insight is that it is indeed sufficient to consider such blocks.

#+name: lem:p-blocks
#+begin_lem
#+latex: ~
1. @@latex:\label{itm:lem-p-blocks-1}@@
   Let \(\tilde{u}\in\tilde{V}(\tilde{F}^o\cup\tilde{F}^u)\setminus\{v_F\}\). Then:

   1) @@latex:\label{itm:lem-p-blocks-1-1}@@
      If \(\tilde{u}\in V(F^o\cup F^u)\), then \(\tilde{b}(\tilde{u},\tilde{F})=b(\tilde{u},F)\).

   2) @@latex:\label{itm:lem-p-blocks-1-2}@@
      If \(\tilde{u}\in V(F'^o\cup F'^u)\setminus\{s\}\), then \(\tilde{b}(\tilde{u},\tilde{F})=b(\tilde{u},F')\).

2. @@latex:\label{itm:lem-p-blocks-2}@@
   For every \(\tilde{P}\in\tilde{\mathcal{P}}\setminus\{\tilde{F}\}\) and every \(\tilde{u}\in\tilde{V}(\tilde{P}^o\cup\tilde{P}^u)\), \(\tilde{b}(\tilde{u},\tilde{P})=b(\tilde{u},\tilde{P})\).
#+end_lem

#+begin_remark
The proof is very technical and tedious--and hence omitted for now--and I hope we can come up with a better characterization of blocks (see [[file:../README.org::*Open problems]]) which significantly simplifies the proof.
#+end_remark

#+name: corollary:p-blocks
#+begin_corollary
#+latex: ~
1. @@latex:\label{itm:corollary-p-blocks-1}@@
   For every block \(\tilde{b}\in\tilde{B}(\tilde{G})\setminus\{\{v_F,v_{F'}\}\}\), \(\tilde{b}\in B(G)\).

2. @@latex:\label{itm:corollary-p-blocks-2}@@
   For every block \(b\in B(G)\setminus\{\{v_F,t\},\{s,v_{F'}\}\}\), \(b\in\tilde{B}(\tilde{G})\).
#+end_corollary

#+begin_proof
#+latex: ~
#+latex: \paragraph{\ref{itm:corollary-p-blocks-1}.}
Let \(\tilde{b}\in\tilde{B}(\tilde{G})\setminus\{\{v_F,v_{F'}\}\}\), \(\tilde{P}=\tilde{P}(\tilde{b})\), and \(\tilde{u}=\tilde{\mathcal{S}}(\tilde{b})\).
If \(\tilde{P}=\tilde{F}\), then, by assumption, \(\tilde{u}\neq v_F\) and hence, by construction of \(\tilde{F}\) and Lemma [[lem:p-blocks]] \ref{itm:lem-p-blocks-1}, \(\tilde{b}=b(\tilde{u},F)\in B(G)\) or \(\tilde{b}=b(\tilde{u},F')\in B(G)\).
If \(\tilde{P}\neq\tilde{F}\), then, by Lemma [[lem:p-blocks]] \ref{itm:lem-p-blocks-2}, \(\tilde{b}=b(\tilde{u},\tilde{P})\in B(G)\).


#+latex: \paragraph{\ref{itm:corollary-p-blocks-2}.}
Let \(b\in B(G)\setminus\{\{v_F,t\},\{s,v_{F'}\}\}\), \(P=P(b)\), and \(u=\mathcal{S}(b)\).
If \(P=F\), then, by assumption, \(u\neq v_F\) and hence, by construction of \(\tilde{F}\) and Lemma [[lem:p-blocks]] \ref{itm:lem-p-blocks-1-1}, \(b=\tilde{b}(u,\tilde{F})\in\tilde{B}(\tilde{G})\).
If \(P=F'\), then, by assumption, \(u\notin\{v_F,s\}\) and hence, by construction of \(\tilde{F}\) and Lemma [[lem:p-blocks]] \ref{itm:lem-p-blocks-1-2}, \(b=\tilde{b}(u,\tilde{F})\in\tilde{B}(\tilde{G})\).
If \(P\in\mathcal{P}\setminus\{F,F'\}\), then \(P\in\tilde{\mathcal{P}}\setminus\{\tilde{F}\}\) and hence, by Lemma [[lem:p-blocks]] \ref{itm:lem-p-blocks-2}, \(b=\tilde{b}(u,P)\in\tilde{B}(\tilde{G})\).
#+end_proof

To show that block sequences \(\mathcal{B},\tilde{\mathcal{B}}\) as chosen above are feasible, we will verify that capacity constraint [[eqn:capacity-constraint-blocks]] is satisfied for every edge \(e\in E\), \(\tilde{e}\in\tilde{E}\), respectively, and every \(i\in[\ell]\).
We now show that for every edge \(\tilde{e}\) other than \((v_F,t),(s,v_{F'}),(v_F,v_{F'})\) and every \(i\in[\ell]\), \(\tilde{e}\) is on some transient (\(s,t\))-path in \(\tilde{G}\) after updating all blocks in \(\tilde{B}_i\) iff it is on some transient (\(s,t\))-path in \(G\) after updating all blocks in \(B_i\).

#+name: lem:alpha
#+begin_lem
Let \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) be a block sequence for \(G\) and \(\tilde{\mathcal{B}}=(\tilde{\mathscr{B}}_1,\dots,\tilde{\mathscr{B}}_{\ell})\) be a block sequence for \(\tilde{G}\) such that for every block \(b\) contained in both \(G\) and \(\tilde{G}\), \(\mathcal{B}(b)=\tilde{\mathcal{B}}(b)\).
Moreover, let \((\tilde{u},\tilde{v})\in\tilde{E}\setminus\{(v_F,t),(s,v_{F'}),(v_F,v_{F'})\}\) and \(i\in[\ell]\).
Finally, let \(\tilde{P}\in\tilde{\mathcal{P}}\) such that \((\tilde{u},\tilde{v})\in\tilde{E}(\tilde{P}^o\cup\tilde{P}^u)\).
Then:

1. @@latex:\label{itm:lem-alpha-1}@@
   If \(\tilde{P}=\tilde{F}\), then \(\tilde{\alpha}_{\tilde{P}}((\tilde{u},\tilde{v}),\tilde{B}_i)=\mathrm{active}\) iff either \(\alpha_F((\tilde{u},\tilde{v}),B_i)=\mathrm{active}\) or \(\alpha_{F'}((\tilde{u},\tilde{v}),B_i)=\mathrm{active}\).

2. @@latex:\label{itm:lem-alpha-2}@@
   If \(\tilde{P}\neq\tilde{F}\), then \(\tilde{\alpha}_{\tilde{P}}((\tilde{u},\tilde{v}),\tilde{B}_i)=\alpha_{\tilde{P}}((\tilde{u},\tilde{v}),B_i)\).
#+end_lem

#+begin_proof
Let \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) be a block sequence for \(G\) and \(\tilde{\mathcal{B}}=(\tilde{\mathscr{B}}_1,\dots,\tilde{\mathscr{B}}_{\ell})\) be a block sequence for \(\tilde{G}\) such that for every block \(b\) satisfying both \(b\in B(G)\) and \(b\in\tilde{B}(\tilde{G})\), \(\mathcal{B}(b)=\tilde{\mathcal{B}}(b)\).
Let \((\tilde{u},\tilde{v})\in\tilde{E}\setminus\{(v_F,t),(s,v_{F'}),(v_F,v_{F'})\}\) and \(i\in[\ell]\).
Let \(\tilde{P}\in\tilde{\mathcal{P}}\) such that \((\tilde{u},\tilde{v})\in\tilde{E}(\tilde{P}^o\cup\tilde{P}^u)\).

#+latex: \paragraph{\ref{itm:lem-alpha-1}.}
Suppose \(\tilde{P}=\tilde{F}\).
By definition of \(\tilde{F}\) and since \((\tilde{u},\tilde{v})\in\tilde{E}\setminus\{(v_F,t),(s,v_{F'}),(v_F,v_{F'})\}\), \((\tilde{u},\tilde{v})\in\tilde{E}(\tilde{F}^o)\) iff \((\tilde{u},\tilde{v})\in E(F^o)\) or \((\tilde{u},\tilde{v})\in E(F'^o)\).
Similarly, \((\tilde{u},\tilde{v})\in\tilde{E}(\tilde{F}^u)\) iff \((\tilde{u},\tilde{v})\in E(F^u)\) or \((\tilde{u},\tilde{v})\in E(F'^u)\).
We show \(\tilde{\alpha}_{\tilde{F}}((\tilde{u},\tilde{v}),\tilde{B}_i)=\mathrm{active}\) iff \(\alpha_F((\tilde{u},\tilde{v}),B_i)=\mathrm{active}\) or \(\alpha_{F'}((\tilde{u},\tilde{v}),B_i)=\mathrm{active}\).
Notice that this implies \ref{itm:lem-alpha-1}, since, by assumption, \(F,F'\) are edge-disjoint: Otherwise, either

1. \(F\) and \(F'\) have a common vertex other than \(s,t\), or
   
2. \(F^o\cup F^u\) and \(F'^o\cup F'^u\) both consist of the single edge \((s,t)\), in which case \(v_F=s\) and \(v_{F'}=t\), which contradicts that \((v_F,v_{F'})\notin E\).


We first show the if part.
Suppose \(\tilde{\alpha}_{\tilde{F}}((\tilde{u},\tilde{v}),\tilde{B}_i)=\mathrm{active}\).
By assumption, \((\tilde{u},\tilde{v})\in\tilde{E}(\tilde{F}^o)\) or \((\tilde{u},\tilde{v})\in\tilde{E}(\tilde{F}^u)\).
Hence \((\tilde{u},\tilde{v})\in E(F^o)\) or \((\tilde{u},\tilde{v})\in E(F^u)\) or \((\tilde{u},\tilde{v})\in E(F'^o)\) or \((\tilde{u},\tilde{v})\in E(F'^u)\).
We only consider case \((\tilde{u},\tilde{v})\in E(F^o)\); case \((\tilde{u},\tilde{v})\in E(F^u)\) is similar, and cases \((\tilde{u},\tilde{v})\in E(F'^o)\), \((\tilde{u},\tilde{v})\in E(F'^u)\) are analogous to cases \((\tilde{u},\tilde{v})\in E(F^o)\), \((\tilde{u},\tilde{v})\in E(F^u)\), respectively.

Suppose \((\tilde{u},\tilde{v})\in E(F^o)\).
Hence \((\tilde{u},\tilde{v})\in\tilde{E}(\tilde{F}^o)\).
Hence \(\tilde{b}(\tilde{u},\tilde{F})\in\tilde{B}_i\).
Moreover, by Lemma [[lem:p-blocks]] \ref{itm:lem-p-blocks-1-1}, \(\tilde{b}(\tilde{u},\tilde{F})=b(\tilde{u},F)\).
Hence, by assumption, \(b(\tilde{u},F)\in B_i\).
Thus \(\alpha_F((\tilde{u},\tilde{v}),B_i)=\mathrm{active}\).

We now show the only-if part.
Suppose \(\alpha_F((\tilde{u},\tilde{v}),B_i)=\mathrm{active}\) or \(\alpha_{F'}((\tilde{u},\tilde{v}),B_i)=\mathrm{active}\).
We only consider the former case; the latter one is analogous.

Suppose \(\alpha_F((\tilde{u},\tilde{v}),B_i)=\mathrm{active}\).
Hence \((\tilde{u},\tilde{v})\in E(F^o)\) or \((\tilde{u},\tilde{v})\in E(F^u)\).
We again only consider the former case; the latter one is similar.

Suppose \((\tilde{u},\tilde{v})\in E(F^o)\).
Hence \(b(\tilde{u},F)\in B_i\).
Moreover, by Lemma [[lem:p-blocks]] \ref{itm:lem-p-blocks-1-1}, \(b(\tilde{u},F)=\tilde{b}(\tilde{u},\tilde{F})\).
Hence, by assumption, \(\tilde{b}(\tilde{u},\tilde{F})\in\tilde{B}_i\).
Moreover, \((\tilde{u},\tilde{v})\in\tilde{E}(\tilde{F}^o)\).
Thus \(\tilde{\alpha}_{\tilde{F}}((\tilde{u},\tilde{v}),\tilde{B}_i)=\mathrm{active}\).

#+latex: \paragraph{\ref{itm:lem-alpha-2}.}
Suppose \(\tilde{P}\neq\tilde{F}\).
By definition of \(\tilde{G}\), \(\tilde{P}\in\mathcal{P}\setminus\{F,F'\}\) and hence both \((\tilde{u},\tilde{v})\in\tilde{E}(\tilde{P}^o)\) iff \((\tilde{u},\tilde{v})\in E(\tilde{P}^o)\) and \((\tilde{u},\tilde{v})\in\tilde{E}(\tilde{P}^u)\) iff \((\tilde{u},\tilde{v})\in E(\tilde{P}^u)\).
Hence \(\tilde{b}(\tilde{u},\tilde{P})\in\tilde{B}(\tilde{G})\) and \(\tilde{b}(\tilde{u},\tilde{P})\in B(G)\).
Hence, by assumption, \(\tilde{b}(\tilde{u},\tilde{P})\in\tilde{B}_i\) iff \(\tilde{b}(\tilde{u},\tilde{P})\in B_i\), and, by Lemma [[lem:p-blocks]] \ref{itm:lem-p-blocks-2}, \(\tilde{b}(\tilde{u},\tilde{P})=b(\tilde{u},\tilde{P})\).
Hence \(\tilde{b}(\tilde{u},\tilde{P})\in\tilde{B}_i\) iff \(b(\tilde{u},\tilde{P})\in B_i\).
The claim now follows by definitions of \(\tilde{\alpha}_{\tilde{P}},\alpha_{\tilde{P}}\).
#+end_proof

#+name: lem:sum-demands
#+begin_lem
Let \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) be a block sequence for \(G\) and \(\tilde{\mathcal{B}}=(\tilde{\mathscr{B}}_1,\dots,\tilde{\mathscr{B}}_{\ell})\) be a block sequence for \(\tilde{G}\) such that for every block \(b\) contained in both \(G\) and \(\tilde{G}\), \(\mathcal{B}(b)=\tilde{\mathcal{B}}(b)\).
Moreover, let \((\tilde{u},\tilde{v})\in\tilde{E}\setminus\{(v_F,t),(s,v_{F'}),(v_F,v_{F'})\}\) and \(i\in[\ell]\).
Then

\begin{align*}
\sum_{\tilde{P}\in\tilde{\mathcal{P}}:\tilde{\alpha}_{\tilde{P}}((\tilde{u},\tilde{v}),\tilde{B}_{i-1})=\mathrm{active}\text{ or }\tilde{\alpha}_{\tilde{P}}((\tilde{u},\tilde{v}),\tilde{B}_i)=\mathrm{active}}\tilde{d}_{\tilde{P}}&=\\
\sum_{\tilde{P}\in\mathcal{P}:\alpha_{\tilde{P}}((\tilde{u},\tilde{v}),B_{i-1})=\mathrm{active}\text{ or }\alpha_{\tilde{P}}((\tilde{u},\tilde{v}),B_i)=\mathrm{active}}d_{\tilde{P}}&.
\end{align*}
#+end_lem

#+begin_proof
Let \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) be a block sequence for \(G\) and \(\tilde{\mathcal{B}}=(\tilde{\mathscr{B}}_1,\dots,\tilde{\mathscr{B}}_{\ell})\) be a block sequence for \(\tilde{G}\) such that for every block \(b\) satisfying both \(b\in B(G)\) and \(b\in\tilde{B}(\tilde{G})\), \(\mathcal{B}(b)=\tilde{\mathcal{B}}(b)\).
Let \((\tilde{u},\tilde{v})\in\tilde{E}\setminus\{(v_F,t),(s,v_{F'}),(v_F,v_{F'})\}\) and \(i\in[\ell]\).
By definition of \(\tilde{G}\), \(\tilde{\mathcal{P}}=\mathcal{P}\setminus\{F,F'\}\cup\{\tilde{F}\}\), \(\tilde{d}_{\tilde{F}}=d_F\), and \(\tilde{d}_{\tilde{P}}=d_{\tilde{P}}\) for every \(\tilde{P}\in\tilde{\mathcal{P}}\setminus\{\tilde{F}\}\).
Moreover, by assumption, \(d_F=d_{F'}\).
Hence, by Lemma [[lem:alpha]], we have

\begin{align*}
\sum_{\tilde{P}\in\tilde{\mathcal{P}}:\tilde{\alpha}_{\tilde{P}}((\tilde{u},\tilde{v}),\tilde{B}_{i-1})=\mathrm{active}\text{ or }\tilde{\alpha}_{\tilde{P}}((\tilde{u},\tilde{v}),\tilde{B}_i)=\mathrm{active}}\tilde{d}_{\tilde{P}}&=\\
\sum_{\tilde{P}\in\tilde{\mathcal{P}}\setminus\{\tilde{F}\}:\tilde{\alpha}_{\tilde{P}}((\tilde{u},\tilde{v}),\tilde{B}_{i-1})=\mathrm{active}\text{ or }\tilde{\alpha}_{\tilde{P}}((\tilde{u},\tilde{v}),\tilde{B}_i)=\mathrm{active}}\tilde{d}_{\tilde{P}}&\\
+\sum_{\tilde{P}\in\{\tilde{F}\}:\tilde{\alpha}_{\tilde{P}}((\tilde{u},\tilde{v}),\tilde{B}_{i-1})=\mathrm{active}\text{ or }\tilde{\alpha}_{\tilde{P}}((\tilde{u},\tilde{v}),\tilde{B}_i)=\mathrm{active}}\tilde{d}_{\tilde{P}}&=\\
\sum_{\tilde{P}\in\mathcal{P}\setminus\{F,F'\}:\alpha_{\tilde{P}}((\tilde{u},\tilde{v}),B_{i-1})=\mathrm{active}\text{ or }\alpha_{\tilde{P}}((\tilde{u},\tilde{v}),B_i)=\mathrm{active}}d_{\tilde{P}}&\\
+\sum_{\tilde{P}\in\{F,F'\}:\alpha_{\tilde{P}}((\tilde{u},\tilde{v}),B_{i-1})=\mathrm{active}\text{ or }\alpha_{\tilde{P}}((\tilde{u},\tilde{v}),B_i)=\mathrm{active}}d_{\tilde{P}}&=\\
\sum_{\tilde{P}\in\mathcal{P}:\alpha_{\tilde{P}}((\tilde{u},\tilde{v}),B_{i-1})=\mathrm{active}\text{ or }\alpha_{\tilde{P}}((\tilde{u},\tilde{v}),B_i)=\mathrm{active}}d_{\tilde{P}}&.
\end{align*}
#+end_proof

We are now ready to prove the [[lem:merging-flow-pairs][Merging Lemma]].

#+attr_latex: :options [Proof of Lemma [[lem:merging-flow-pairs]]]
#+begin_proof
We show that there is a feasible block sequence \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) for \(G\) iff there is a feasible block sequence \(\tilde{\mathcal{B}}=(\tilde{\mathscr{B}}_1,\dots,\tilde{\mathscr{B}}_{\ell})\) for \(\tilde{G}\).

#+latex: \paragraph{If part.}
Let \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) be a feasible block sequence for \(G\).
We define block sequence \(\tilde{\mathcal{B}}=(\tilde{\mathscr{B}}_1,\dots,\tilde{\mathscr{B}}_{\ell})\) for \(\tilde{G}\) as follows.
By Remark [[remark:block-sequence]], we may ignore block \(\{v_F,v_{F'}\}\).
For every other block \(\tilde{b}\in\tilde{B}(\tilde{G})\setminus\{\{v_F,v_{F'}\}\}\), we define \(\tilde{\mathcal{B}}(\tilde{b})=\mathcal{B}(\tilde{b})\).
Notice that if \(\tilde{b}\in\tilde{B}(\tilde{G})\setminus\{\{v_F,v_{F'}\}\}\), then, by Lemma [[corollary:p-blocks]] \ref{itm:corollary-p-blocks-1}, \(\tilde{b}\in B(G)\) and hence \(\mathcal{B}(\tilde{b})\) is defined.

We now show that \(\tilde{\mathcal{B}}\) is feasible.
Let \((\tilde{u},\tilde{v})\in\tilde{E}\) and \(i\in[\ell]\).
We show that the capacity constraint for \((\tilde{u},\tilde{v})\) and \(i\) is satisfied.

If \((\tilde{u},\tilde{v})=(v_F,v_{F'})\), then, by definition of \(\tilde{G}\),
\[
\tilde{c}(\tilde{u},\tilde{v})\geq\sum_{\tilde{P}\in\tilde{\mathcal{P}}:(\tilde{u},\tilde{v})\in E(\tilde{P}^o\cup\tilde{P}^u)}d_{\tilde{P}}
\]
and hence the capacity constraint is satisfied.

Now suppose \((\tilde{u},\tilde{v})\neq(v_F,v_{F'})\).
Hence, by definition of \(\tilde{G}\), \((\tilde{u},\tilde{v})\in E\) and \(\tilde{c}(\tilde{u},\tilde{v})=c(\tilde{u},\tilde{v})\).
If \((\tilde{u},\tilde{v})\in\{(v_F,t),(s,v_{F'})\}\), then by assumption \ref{itm:lem-merging-flow-pairs-property-3-3}, the capacity constraint is satisfied.

Now suppose \((\tilde{u},\tilde{v})\notin\{(v_F,t),(s,v_{F'}),(v_F,v_{F'})\}\).
Hence, by Lemma [[lem:sum-demands]] and since block sequence \(\mathcal{B}\) is feasible, we have

\begin{align*}
\sum_{\tilde{P}\in\tilde{\mathcal{P}}:\tilde{\alpha}_{\tilde{P}}((\tilde{u},\tilde{v}),\tilde{B}_{i-1})=\mathrm{active}\text{ or }\tilde{\alpha}_{\tilde{P}}((\tilde{u},\tilde{v}),\tilde{B}_i)=\mathrm{active}}\tilde{d}_{\tilde{P}}&=\\
\sum_{\tilde{P}\in\mathcal{P}:\alpha_{\tilde{P}}((\tilde{u},\tilde{v}),B_{i-1})=\mathrm{active}\text{ or }\alpha_{\tilde{P}}((\tilde{u},\tilde{v}),B_i)=\mathrm{active}}d_{\tilde{P}}&\leq\\
c(\tilde{u},\tilde{v})&=
\tilde{c}(\tilde{u},\tilde{v}).
\end{align*}

#+latex: \paragraph{Only-if part.}
Let \(\tilde{\mathcal{B}}=(\tilde{\mathscr{B}}_1,\dots,\tilde{\mathscr{B}}_{\ell})\) be a feasible block sequence for \(\tilde{G}\).
We define block sequence \(\mathcal{B}=(\mathscr{B}_1,\dots,\mathscr{B}_{\ell})\) for \(G\) as follows.
By Remark [[remark:block-sequence]], we may ignore blocks \(\{v_F,t\},\{s,v_{F'}\}\).
For every other block \(b\in B(G)\setminus\{\{v_F,t\},\{s,v_{F'}\}\}\), we define \(\mathcal{B}(b)=\tilde{\mathcal{B}}(b)\).
Notice that if \(b\in B(G)\setminus\{\{v_F,t\},\{s,v_{F'}\}\}\), then, by Lemma [[corollary:p-blocks]] \ref{itm:corollary-p-blocks-2}, \(b\in\tilde{B}(\tilde{G})\) and hence \(\tilde{\mathcal{B}}(b)\) is defined.

We now show that \(\mathcal{B}\) is feasible.
Let \((u,v)\in E\) and \(i\in[\ell]\).
We show that the capacity constraint for \((u,v)\) and \(i\) is satisfied.

If \((u,v)\in\{(v_F,t),(s,v_{F'})\}\), then, by assumption \ref{itm:lem-merging-flow-pairs-property-3-3}, the capacity constraint is satisfied.

Now suppose \((u,v)\notin\{(v_F,t),(s,v_{F'})\}\).
Hence, by assumption \ref{itm:lem-merging-flow-pairs-property-3-1}, \((u,v)\notin\{(v_F,t),(s,v_{F'}),(v_F,v_{F'})\}\).
Hence, by definition of \(\tilde{G}\), \((u,v)\in\tilde{E}\) and \(c(u,v)=\tilde{c}(u,v)\).
Hence, by Lemma [[lem:sum-demands]] and since block sequence \(\tilde{\mathcal{B}}\) is feasible, we have

\begin{align*}
\sum_{P\in\mathcal{P}:\alpha_P((u,v),B_{i-1})=\mathrm{active}\text{ or }\alpha_P((u,v),B_i)=\mathrm{active}}d_P&=\\
\sum_{P\in\tilde{\mathcal{P}}:\tilde{\alpha}_P((u,v),\tilde{B}_{i-1})=\mathrm{active}\text{ or }\tilde{\alpha}_P((u,v),\tilde{B}_i)=\mathrm{active}}\tilde{d}_P&\leq\\
\tilde{c}(u,v)&=
c(u,v).
\end{align*}
#+end_proof

#+name: remark:merging-flow-pairs
#+begin_remark
Let \(G,F,F'\) and \(\tilde{G},\tilde{F}\) be as specified in the proof of the [[lem:merging-flow-pairs][Merging Lemma]].
Then notice that:

1. @@latex:\label{itm:remark-merging-flow-pairs-1}@@
   For every flow pair \(P\in\mathcal{P}\setminus\{F,F'\}\), if properties \ref{itm:lem-merging-flow-pairs-property-1}, \ref{itm:lem-merging-flow-pairs-property-2}, and \ref{itm:lem-merging-flow-pairs-property-3} are satisfied for both \(F,P\) and \(F',P\) in \(G\), then they are also satisfied for \(\tilde{F},P\) in \(\tilde{G}\).

2. @@latex:\label{itm:remark-merging-flow-pairs-2}@@
   For every two flow pairs \(P,P'\in\mathcal{P}\setminus\{F,F'\}\), if properties \ref{itm:lem-merging-flow-pairs-property-1}, \ref{itm:lem-merging-flow-pairs-property-2}, and \ref{itm:lem-merging-flow-pairs-property-3} are satisfied for \(P,P'\) in \(G\), then they are also satisfied for \(P,P'\) in \(\tilde{G}\).
#+end_remark

** \(\textbf{NP}\)-Hardness for the General Case

We are finally ready to prove Theorem [[thm:np-hardness-k-eq-3]].

#+attr_latex: :options [Proof of Theorem [[thm:np-hardness-k-eq-3]]]
#+begin_proof
Let \(C\) be a 4CNF formula and \(G\) be the corresponding update flow network as specified in the proof of Theorem [[thm:np-hardness-special-case]].
Then \(G\) comprises \(10\) flow pairs \(\bar{X},L,\tilde{L},X,R,\tilde{R},B,\tilde{B},B_0,B_1\), each with demand \(1\).

By definition, flow pairs \(\bar{X},L,\tilde{L}\) pairwise satisfy assumptions \ref{itm:lem-merging-flow-pairs-property-1}, \ref{itm:lem-merging-flow-pairs-property-2}, and \ref{itm:lem-merging-flow-pairs-property-3} of the [[lem:merging-flow-pairs][Merging Lemma]] (confirm Table [[tab:s-t-flows]]).
Hence, by Remark [[remark:merging-flow-pairs]] \ref{itm:remark-merging-flow-pairs-1}, we may apply the Merging Lemma twice to obtain from \(G\) an update flow network \(G_8\) with \(8\) flow pairs.

Similarly, flow pairs \(X,R,\tilde{R}\) pairwise satisfy assumptions \ref{itm:lem-merging-flow-pairs-property-1}, \ref{itm:lem-merging-flow-pairs-property-2}, and \ref{itm:lem-merging-flow-pairs-property-3} of the Merging Lemma in \(G\).
By Remark [[remark:merging-flow-pairs]] \ref{itm:remark-merging-flow-pairs-2}, they also satisfy these assumptions in \(G_8\).
Hence, again by Remark [[remark:merging-flow-pairs]] \ref{itm:remark-merging-flow-pairs-1}, we may apply the Merging Lemma twice to obtain from \(G_8\) an update flow network \(G_6\) with \(6\) flow pairs.

Finally, as flow pairs \(B,\tilde{B},B_0,B_1\) again pairwise satisfy all three assumptions, we apply the Merging Lemma three times to obtain from \(G_6\) an update flow network \(G_3\) with \(3\) flow pairs.

Putting everything together, we have that there is a satisfying assignment for 4CNF formula \(C\) iff there is a feasible block sequence for update flow network \(G\) iff there is a feasible block sequence for \(G_8\) iff there is a feasible block sequence for \(G_6\) iff there is a feasible block sequence for \(G_3\), which, by Corollary [[corollary:block-sequence-iff-update-sequence]], is the case iff there is a feasible update sequence for \(G_3\).
#+end_proof
